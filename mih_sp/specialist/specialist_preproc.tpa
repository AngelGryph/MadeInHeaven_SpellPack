DEFINE_ACTION_FUNCTION specialist_preproc
BEGIN
  // Ensure existing and unique clab- and lua tables

  LAUNCH_ACTION_FUNCTION kit_clab_initialize END
  LAUNCH_ACTION_FUNCTION kit_baseline_lua END


  // Create Diviner version of Find Traps

  LAUNCH_ACTION_FUNCTION spl_resolve_ids
    INT_VAR
    level		= 2
    STR_VAR
    ids			= "DIVINER_FIND_TRAPS"
    type		= "class"
    RET
    resref
  END

  spl.copy[sppr205=>%resref%]
  [
    m_type:="wizard"
    m.spl_enforce_school{divination}
    m.ab.alter{s_location:="innate"}
  ]


  // Create Enchanter version of Free Action

  LAUNCH_ACTION_FUNCTION spl_resolve_ids
    INT_VAR
    level		= 4
    STR_VAR
    ids			= "ENCHANTER_FREE_ACTION"
    type		= "class"
    RET
    resref
  END

  spl.copy[sppr403=>%resref%]
  [
    m_type:="wizard"
    m.spl_enforce_school{enchantment}
    m.ab.alter{s_location:="innate"}
  ]


  // Create Illusionist version of Detect Illusion

  LAUNCH_ACTION_FUNCTION spl_resolve_ids
    INT_VAR
    level		= 3
    STR_VAR
    ids			= "ILLUSIONIST_DETECT_ILLUSION"
    type		= "class"
    RET
    resref
  END

  spl.copy[spwi322=>%resref%]
  [
    m_type:="wizard"
    m.spl_enforce_school{illusion}
    m.ab.alter{s_location:="innate"}
  ]


  // Create Necromancer version of Negative Plane Protection

  LAUNCH_ACTION_FUNCTION spl_resolve_ids
    INT_VAR
    level		= 4
    STR_VAR
    ids			= "NECROMANCER_NEGATIVE_PLANE_PROTECTION"
    type		= "class"
    RET
    resref
  END

  spl.copy[sppr413=>%resref%]
  [
    m_type:="wizard"
    m.spl_enforce_school{necromancy}
    m.ab.alter{s_location:="innate" s_target:="caster"}
    m.ab_fx.alter{s_target:="self"}
  ]
END	// specialist_preproc


