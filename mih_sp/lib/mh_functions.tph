// Made in Heaven function library
//
// These are custom functions I use in my mods.  If there are any that you
// think you can use in yours, feel free to grab them.  A bit of credit would
// be nice of course. <3


// erase_journal_entries_on_bg2_transition
//
// This function goes through a (compiled) dialog file, extracts the string
// references of all JOURNAL, SOLVED_JOURNAL and UNSOLVED_JOURNAL entries,
// and makes sure they get deleted from the journal during the transfer into
// BG2.  If called on a non-BGT game (including EET), it does nothing at all.

DEFINE_ACTION_FUNCTION erase_journal_entries_on_bg2_transition
  STR_VAR
  dialog    = "dummy"
BEGIN
  ACTION_IF GAME_IS "bgt" AND FILE_EXISTS_IN_GAME "aram00.bcs"
  BEGIN
    COPY_EXISTING - "%dialog%.dlg" "%mod_name%/work"
      GET_OFFSET_ARRAY trans_array 0x0014 4 0x0010 4 0 0 0x0020
      PHP_EACH trans_array AS int => trans_offset
      BEGIN
        PATCH_IF (LONG_AT (trans_offset) & BIT4)
    BEGIN
      READ_SLONG (trans_offset + 0x0008) strref
      PATCH_IF strref > 0
      BEGIN
        DEFINE_ASSOCIATIVE_ARRAY journal_entries
        BEGIN
          "%strref%" => "1"
        END
      END
    END
      END

    COPY_EXISTING "aram00.bcs" "override"
    DECOMPILE_AND_PATCH
    BEGIN
      PHP_EACH journal_entries AS strref => int
      BEGIN
        REPLACE_TEXTUALLY CASE_SENSITIVE EXACT_MATCH
	 ~SetGlobal("A6StartARAM00","ARAM00",10)~
	 ~SetGlobal("A6StartARAM00","ARAM00",10)
	  EraseJournalEntry(%strref%)~
      END
    END
  END
END


// cd_immunity_magic_missile_arrays
//
// This macro is for use with CamDawg's immunity arrays.  It turns immunity
// to the Magic Missile spell into full immunity to all similar spells,
// that is those that use the same projectile.

DEFINE_PATCH_MACRO cd_immunity_magic_missile_arrays BEGIN
  DEFINE_ASSOCIATIVE_ARRAY cd_immunity_batches_key BEGIN
    206,  "-10",  "-10", "spwi112",  "-10",  "-10", "same" => 1 // immunity to Magic Missile spell
  END
  DEFINE_ASSOCIATIVE_ARRAY cd_immunity_batches_extras BEGIN
    83,	     0,    36,         "", "-10", "-10", "same"  => 1 // Protection: From Projectile
  END
  DEFINE_ASSOCIATIVE_ARRAY cd_immunity_batches_delete BEGIN
    206,  "-10",  "-10", "spwi003",  "-10",  "-10", "same" => 1 // immunity to Magic Missile trap
    206,  "-10",  "-10", "spwi112",  "-10",  "-10", "same" => 1 // immunity to Magic Missile spell
  END
END


DEFINE_PATCH_FUNCTION CRE_make_legendary
  STR_VAR
  arguments	= ""
BEGIN
  INNER_ACTION
  BEGIN
    LAUNCH_ACTION_FUNCTION read_table_entry_external
      STR_VAR
      file	= "legendary.2da"
      locbase	= "lib/resource"
      row	= "%arguments%"
      column	= "HD"
      RET
      hd_bonus	= value
    END

    LAUNCH_ACTION_FUNCTION read_table_entry_external
      STR_VAR
      file	= "legendary.2da"
      locbase	= "lib/resource"
      row	= "%arguments%"
      column	= "AC"
      RET
      ac_bonus	= value
    END

    LAUNCH_ACTION_FUNCTION read_table_entry_external
      STR_VAR
      file	= "legendary.2da"
      locbase	= "lib/resource"
      row	= "%arguments%"
      column	= "THAC0"
      RET
      thac0_bonus	= value
    END
  END

  PATCH_PRINT "hd_bonus = %hd_bonus%"


  CLEAR_ARRAY make_legendary
  DEFINE_ASSOCIATIVE_ARRAY make_legendary
  BEGIN
    level_all=>"level1 + %hd_bonus%"
    ac=>"if (ac_effective - %ac_bonus% < -20) then -20 else (ac_effective - %ac_bonus%)"
    thac0=>"thac0 - %thac0_bonus%"
    enforce_hp=>at_worst
    enforce_saves=>at_worst
  END
  
  LAUNCH_PATCH_FUNCTION apply_patches
    STR_VAR
    file_ext	= "CRE"
    edits	= "make_legendary"
  END
END


DEFINE_PATCH_FUNCTION CRE_set_xp_by_hd
BEGIN
  LAUNCH_PATCH_FUNCTION fail_unless_int
    STR_VAR
    value="%arguments%"
    expression=""
  END

  LAUNCH_PATCH_FUNCTION CRE_read_level1
    RET level1=value
  END

  SET hd = level1 + arguments

  SET hd = (hd < 0) ? 0 : hd
  SET hd = (hd > 50) ? 50 : hd

  INNER_ACTION
  BEGIN
    LAUNCH_ACTION_FUNCTION read_table_entry_external
      STR_VAR
      file	= "xp_table.2da"
      locbase	= "lib/resource"
      row	= "%hd%"
      column	= "XP"
      RET
      xp_value	= value
    END
  END

  LAUNCH_PATCH_FUNCTION CRE_xp_value
    STR_VAR
    arguments="%xp_value%"
  END
END


