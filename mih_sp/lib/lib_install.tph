DEFINE_ACTION_MACRO __handle_projectile
BEGIN
  ACTION_IF "%projectile%" STRING_COMPARE "*"
  BEGIN
    ADD_PROJECTILE "%file_loc%/projectiles/%projectile%.pro"
    OUTER_SET pronum = IDS_OF_SYMBOL("projectl" "%projectile%") + 1
    
    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      patch_ability_inline'2=>~projectile=>"%pronum%"~
    END

    ACTION_IF FILE_EXISTS "%file_loc%/%graphics_loc%/%projectile%.bam"
    BEGIN
      LAUNCH_ACTION_FUNCTION install
        STR_VAR
        file		= "%projectile%.bam"
        location	= "%graphics_loc%"
	locbase
      END
    END

    ACTION_IF FILE_EXISTS "%file_loc%/%graphics_loc%/%projectile%.vvc"
    BEGIN
      LAUNCH_ACTION_FUNCTION install
        STR_VAR
        file		= "%projectile%.vvc"
        location	= "%graphics_loc%"
	locbase
      END
    END
  END
END	// __handle_projectile


DEFINE_ACTION_MACRO __handle_half_damage
BEGIN
  ACTION_MATCH "%half_damage%"
  WITH
  "dl"  // Level-based dice num
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and save_vs_spells" dicenum=>"ability_true_level" mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not save_vs_spells~
    END
  END

  "dd"	// Double damage.
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and (save_vs_death or save_vs_breath or save_vs_polymorph or save_vs_wands or save_vs_spells)" parameter1=>"parameter1 * 2" dicenum=>"dicenum * 2" mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not (save_vs_death or save_vs_breath or save_vs_polymorph or save_vs_wands or save_vs_spells)~
    END
  END

  "ff"	// Frost Fingers: Double param1 and set dicesize to 3.
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and save_vs_spells" parameter1=>"parameter1 * 2" dicesize=>3 mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not save_vs_spells~
    END
  END
  DEFAULT
  END
END	// __handle_half_damage


DEFINE_ACTION_MACRO __handle_allow_sequencer
BEGIN
  ACTION_IF "%allow_sequencer%" STRING_EQUAL_CASE "n"
  BEGIN
    LAUNCH_ACTION_FUNCTION add_to_contingx
      STR_VAR
      idsname
    END
  END
END

DEFINE_ACTION_MACRO __handle_cd_immunity
BEGIN
  ACTION_IF "%cd_immunity_csv%" STRING_COMPARE "*"
  BEGIN
    OUTER_PATCH_SAVE cd_immunity_list "%cd_immunity_csv%"
    BEGIN
      REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH "," " "
    END

    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      cd_immunity=>"%cd_immunity_list%"
    END
  END
END	// __handle_cd_immunity


DEFINE_ACTION_MACRO __handle_main_items
BEGIN
  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "max_stack_ammo"
    RET
    max_stack_ammo	= value
  END

  ACTION_IF (max_stack_ammo == 0)
  BEGIN
    OUTER_SET max_stack_ammo = enhanced_edition ? 80 : 40
  END

  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "max_stack_thrown"
    RET
    max_stack_thrown	= value
  END

  ACTION_IF (max_stack_thrown == 0)
  BEGIN
    OUTER_SET max_stack_thrown = enhanced_edition ? 40 : 10
  END

  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "max_stack_potions"
    RET
    max_stack_potions	= value
  END

  ACTION_IF (max_stack_potions == 0)
  BEGIN
    OUTER_SET max_stack_potions = enhanced_edition ? 24 : 5
  END

  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "max_stack_jewels"
    RET
    max_stack_jewels	= value
  END

  ACTION_IF (max_stack_jewels == 0)
  BEGIN
    OUTER_SET max_stack_jewels = 20	// Not changed between old and EE.
  END


  COPY - "%file_loc%/%tables_loc%/%main_items%.2da" "%workspace%"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_main_items cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_items i 0 item_res
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_items i 1 name_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_items i 2 desc_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_items i 3 uniden_name_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_items i 4 uniden_desc_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_items i 5 item_exclude
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_items i 6 projectile
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_items i 7 cd_immunity_csv
        
      INNER_ACTION
      BEGIN
        ACTION_CLEAR_ARRAY patch_data
        ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	BEGIN
	  max_in_stack=>~if max_in_stack > 1 and category = 9 then %max_stack_potions% else if max_in_stack > 1 and category is_in [5 14 24 31] then %max_stack_ammo% else if max_in_stack > 1 and category is_in [16 25] then %max_stack_thrown% else if max_in_stack > 1 and category is_in [1 10 34] then %max_stack_jewels% else no_change~
	END

	ACTION_IF IS_AN_INT name_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_name=>"%name_tra%"
	  END
	END

	ACTION_IF IS_AN_INT desc_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_description=>"%desc_tra%"
	  END
	END

	ACTION_IF IS_AN_INT uniden_name_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_unidentified_name=>"%name_tra%"
	  END
	END

	ACTION_IF IS_AN_INT uniden_desc_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_unidentified_description=>"%desc_tra%"
	  END
	END


        // Check/handle item exclude

	ACTION_IF IS_AN_INT item_exclude AND item_exclude > 0
	BEGIN
	  LAUNCH_ACTION_FUNCTION edit_itemexcl
	    INT_VAR
	    mask	= item_exclude
	    STR_VAR
	    item	= "%item_res%"
	  END
	END


        // Check/handle projectile

	LAUNCH_ACTION_MACRO __handle_projectile


	// Check/handle immunities

	LAUNCH_ACTION_MACRO __handle_cd_immunity


        // Install and patch the actual item file.

	LAUNCH_ACTION_FUNCTION install_item
	  STR_VAR
	  item		= "%item_res%"
	  location	= "%items_loc%"
	  edits		= "patch_data"
	  locbase
	END
      END
    END
END	// __handle_main_items


DEFINE_ACTION_MACRO __handle_main_spells
BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME "hidespl.2da"
  BEGIN
    LAUNCH_ACTION_FUNCTION definalise_hidespl END
  END


  COPY - "%file_loc%/%tables_loc%/%main_spells%.2da" "%workspace%"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_main_spells cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 0 idsname
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 1 level
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 2 name_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 3 desc_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 4 type
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 5 idsnum
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 6 scrollname
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 7 half_damage
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 8 projectile
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 9 allow_sequencer
      READ_2DA_ENTRY_FORMER __MH_RESERVED_main_spells i 10 cd_immunity_csv
        
      INNER_ACTION
      BEGIN
        // Obtain a slot in spell.ids

	ACTION_IF IS_AN_INT idsnum
	BEGIN
	  APPEND "spell.ids" "%idsnum% %idsname%" UNLESS "^%idsnum%"
	  CLEAR_IDS_MAP
	END

        LAUNCH_ACTION_FUNCTION add_spell_to_ids
	  INT_VAR
	  type
	  level
          STR_VAR
          idsname
          RET
          newname
        END


        // We know the new resource now, patch stuff in.

        ACTION_CLEAR_ARRAY patch_data

	ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	BEGIN
	  icon=>"%newname%c"
	  patch_ability_inline'1=>~ability_icon=>"%newname%b"~
	  patch_effect_inline'1=>~match=>"resource = ##SELF##" resource=>"%newname%"~
	END


        // Add name/description strings if we have them.

	ACTION_IF IS_AN_INT name_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_name=>"%name_tra%"
	  END
	END

	ACTION_IF IS_AN_INT desc_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_description=>"%desc_tra%"
	  END
	END


        // Check/handle EE half damage

	LAUNCH_ACTION_MACRO __handle_half_damage


        // Check/handle projectile

	LAUNCH_ACTION_MACRO __handle_projectile


	// Check/handle immunities

	LAUNCH_ACTION_MACRO __handle_cd_immunity


	// Look for any icon files we have that need installing.

	ACTION_FOR_EACH suffix IN "a" "b" "c"
	BEGIN
	  ACTION_IF NOT FILE_EXISTS_IN_GAME "%newname%%suffix%.bam" AND
	   FILE_EXISTS "%file_loc%/%graphics_loc%/%idsname%_%suffix%.bam"
	  BEGIN
	    COPY_LARGE "%file_loc%/%graphics_loc%/%idsname%_%suffix%.bam" "override/%newname%%suffix%.bam"
	  END
	END


        // Install and patch the actual spell file.

        COPY + "%file_loc%/%spells_loc%/%idsname%.spl" "%workspace%/%newname%.spl"

	LAUNCH_ACTION_FUNCTION install_spell
	  STR_VAR
	  spell		= "%newname%"
	  locabs	= "%workspace%"
	  edits		= "patch_data"
	END

	DELETE + "%workspace%/%newname%.spl"


	// Create a scroll if one is requested.

	ACTION_IF "%scrollname%" STRING_COMPARE "*"
	BEGIN
            LAUNCH_ACTION_FUNCTION make_scroll_of_spell
              STR_VAR
              resref	= "%newname%"
              scrollname
            END
	END


	// Update contingx.2da if needed

	LAUNCH_ACTION_MACRO __handle_allow_sequencer
      END
    END
END	// __handle_main_spells


DEFINE_ACTION_MACRO __handle_simple_items
BEGIN
  COPY - "%file_loc%/%tables_loc%/%simple_items%.2da" "%workspace%"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_item_simple cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_item_simple i 0 resref
      READ_2DA_ENTRY_FORMER __MH_RESERVED_item_simple i 1 name_tra

      INNER_ACTION
      BEGIN
        ACTION_CLEAR_ARRAY patch_data

	ACTION_IF IS_AN_INT name_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_both_names=>"%name_tra%"
	  END
	END

        LAUNCH_ACTION_FUNCTION install_item
	  STR_VAR
	  item		= "%resref%"
	  location	= "%items_loc%"
	  edits		= "patch_data"
	  locbase
	END
      END
    END
END	// __handle_simple_items


DEFINE_ACTION_MACRO __handle_simple_spells
BEGIN
  COPY - "%file_loc%/%tables_loc%/%simple_spells%.2da" "%workspace%"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_spell_simple cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_spell_simple i 0 filename
      READ_2DA_ENTRY_FORMER __MH_RESERVED_spell_simple i 1 projectile
      READ_2DA_ENTRY_FORMER __MH_RESERVED_spell_simple i 2 half_damage

      INNER_ACTION
      BEGIN
        ACTION_CLEAR_ARRAY patch_data
	

        // Check/handle projectile

	LAUNCH_ACTION_MACRO __handle_projectile


        // Check/handle EE half damage

	LAUNCH_ACTION_MACRO __handle_half_damage


        // Install the actual spell file.

	LAUNCH_ACTION_FUNCTION install_spell
	  STR_VAR
	  spell		= "%filename%"
	  location	= "%spells_loc%"
	  edits		= "patch_data"
	  locbase
	END
      END
    END
END	// __handle_simple_spells


DEFINE_ACTION_MACRO __handle_simple_creatures
BEGIN
  COPY - "%file_loc%//%tables_loc%/%simple_creatures%.2da" "%workspace%"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_creatures cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_creatures i 0 resref
      READ_2DA_ENTRY_FORMER __MH_RESERVED_creatures i 1 name_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_creatures i 2 vvc

      INNER_ACTION
      BEGIN
        ACTION_IF IS_AN_INT "%name_tra%"
	BEGIN
	  OUTER_TEXT_SPRINT editstring "say_both_names=>%name_tra%"
	END
	ELSE
	BEGIN
	  OUTER_TEXT_SPRINT editstring ""
	END

        LAUNCH_ACTION_FUNCTION install_creature
	  STR_VAR
	  creature	= "%resref%"
	  location	= "%creatures_loc%"
	  editstring
	  locbase
	END
	
	ACTION_IF "%vvc%" STRING_COMPARE_CASE "*"
	BEGIN
	  LAUNCH_ACTION_FUNCTION make_effect
	    STR_VAR
	    effect	= "%resref%"
	    editstring	= ~opcode=>67 timing=>1 parameter1=>5 resource=>"%resref%" vvc=>"%vvc%"~
	  END
	END
      END
    END
END	// __handle_simple_creatures


DEFINE_ACTION_MACRO __handle_simple_effects
BEGIN
  COPY - "%file_loc%/%tables_loc%/%simple_effects%.2da" "%workspace%"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_effects cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 0 resref
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 1 opcode
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 2 parameter1
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 3 parameter2
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 4 parameter3
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 5 parameter4
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 6 dicenum
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 7 dicesize
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 8 resource1
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 9 resource2

      INNER_ACTION
      BEGIN
        LAUNCH_ACTION_FUNCTION make_effect
          STR_VAR
	  effect	= "%resref%"
	  editstring	= ~litvar_resource1=>%resource1% litvar_resource2=>%resource2% opcode=>%opcode% timing=>1 parameter1=>%parameter1% parameter2=>%parameter2% parameter3=>%parameter3% parameter4=>%parameter4% dicenum=>%dicenum% dicesize=>%dicesize% resource=>resource1 vvc=>resource2~
        END
      END
    END
END	// __handle_simple_effects


DEFINE_ACTION_FUNCTION grand_unified_installer
  STR_VAR
  main_items		= "items"
  main_spells		= "spells"
  main_stores		= "stores"
  simple_items		= "simple_items"
  simple_spells		= "simple_spells"
  simple_creatures	= "simple_creatures"
  simple_effects	= "simple_effects"
  copy_files		= "_copy"
  items_loc		= "items"
  spells_loc		= "spells"
  creatures_loc		= "actors"
  graphics_loc		= "graphics"
  tables_loc		= "tables"
  tra			= ""
  locbase		= ""
  locabs		= ""
BEGIN
  LAUNCH_ACTION_FUNCTION get_directory
    STR_VAR
    location
    locbase
    locabs
    RET
    file_loc	= directory
  END

  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "use_ee_half_damage"
    RET
    use_ee_half_damage	= value
  END


  // Handle tra file setting

  ACTION_IF "%tra%" STRING_EQUAL ""
  BEGIN
    OUTER_TEXT_SPRINT tra "%file_loc%"
  END


  // Main action starts here

  WITH_TRA "%scs_tra_loc%/english/%tra%.tra"
   "%scs_tra_loc%/%LANGUAGE%/%tra%.tra"
  BEGIN
    // Copy anything that just needs copying

    ACTION_IF "%copy_files%" STRING_COMPARE ""
    BEGIN
      COPY_LARGE "%file_loc%/%copy_files%" "override"
    END


    // Simple items, creature paws & stuff

    ACTION_IF "%simple_items%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%simple_items%.2da"
    BEGIN
      LAUNCH_ACTION_MACRO __handle_simple_items
    END


    // Simple spells, repeating spells and such

    ACTION_IF "%simple_spells%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%simple_spells%.2da"
    BEGIN
      LAUNCH_ACTION_MACRO __handle_simple_spells
    END


    // Simple creatures, summons and such

    ACTION_IF "%simple_creatures%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%simple_creatures%.2da"
    BEGIN
      LAUNCH_ACTION_MACRO __handle_simple_creatures
    END


    // Simple effects

    ACTION_IF "%simple_effects%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%simple_effects%.2da"
    BEGIN
      LAUNCH_ACTION_MACRO __handle_simple_effects
    END


    // Main items

    ACTION_IF "%main_items%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%main_items%.2da"
    BEGIN
      LAUNCH_ACTION_MACRO __handle_main_items
    END


    // Main spells

    ACTION_IF "%main_spells%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%main_spells%.2da"
    BEGIN
      LAUNCH_ACTION_MACRO __handle_main_spells
    END
  END
END	// grand_unified_installer


