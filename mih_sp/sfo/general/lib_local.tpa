// These are local additions, not part of standard SFO.

DEFINE_PATCH_FUNCTION ITM_cd_immunity
  STR_VAR
  arguments	= ""
BEGIN
  WHILE "%arguments%" STRING_COMPARE ""
  BEGIN
    LAUNCH_PATCH_FUNCTION return_first_entry
      STR_VAR
      list	= "%arguments%"
      RET
      arguments	= list
      entry
    END

    LAUNCH_PATCH_FUNCTION cd_apply_batch
      STR_VAR
      array_name	= "cd_immunity_%entry%_arrays"
    END
  END
END
OUTER_SPRINT $SFO_do_not_parse_arguments("ITM_cd_immunity") ""


DEFINE_PATCH_FUNCTION SPL_cd_immunity
  STR_VAR
  arguments	= ""
BEGIN
  WHILE "%arguments%" STRING_COMPARE ""
  BEGIN
    LAUNCH_PATCH_FUNCTION return_first_entry
      STR_VAR
      list	= "%arguments%"
      RET
      arguments	= list
      entry
    END

    LAUNCH_PATCH_FUNCTION cd_apply_batch
      STR_VAR
      array_name	= "cd_immunity_%entry%_arrays"
    END
  END
END
OUTER_SPRINT $SFO_do_not_parse_arguments("SPL_cd_immunity") ""


DEFINE_PATCH_FUNCTION STO_swap_items
  STR_VAR
  arguments=""
BEGIN
  PATCH_IF "%arguments%" STRING_COMPARE_CASE ""
  BEGIN
    LAUNCH_PATCH_FUNCTION return_first_pair
      STR_VAR
      list	= "%arguments%"
      RET
      old	= key
      new	= value
      arguments	= list
    END
    REPLACE_TEXTUALLY CASE_INSENSITIVE "%old%" "%new%" (8)
    LAUNCH_PATCH_FUNCTION STO_swap_items
      STR_VAR
      arguments	= "%arguments%"
    END
  END
END
OUTER_SPRINT $SFO_do_not_parse_arguments("STO_swap_items") ""


DEFINE_ACTION_FUNCTION edit_itemexcl
  INT_VAR
  mask		= 0
  enable	= 1
  STR_VAR
  item		= ""
BEGIN
  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "update_itemexcl_2da"
    RET
    update_itemexcl_2da	= value
  END

  ACTION_IF (update_itemexcl_2da & mask) > 0
  BEGIN
    LAUNCH_ACTION_FUNCTION write_table_entry
      STR_VAR
      file	= "itemexcl"
      row	= "%item%"
      column	= "VALUE"
      arguments	= "%enable%"
    END
  END
END


DEFINE_ACTION_FUNCTION edit_hidespl
  INT_VAR
  is_hidden	= "-1"
  is_final	= "-1"
  is_removed	= "-1"
  STR_VAR
  spell		= ""
BEGIN
  ACTION_IF enhanced_edition
  BEGIN
    ACTION_IF is_hidden >= 0
    BEGIN
      LAUNCH_ACTION_FUNCTION write_table_entry
        STR_VAR
        file		= "hidespl"
        row		= "%spell%"
        column		= "IS_HIDDEN"
        arguments	= "%is_hidden%"
      END
    END

    ACTION_IF is_final >= 0
    BEGIN
      LAUNCH_ACTION_FUNCTION write_table_entry
        STR_VAR
        file		= "hidespl"
        row		= "%spell%"
        column		= "IS_FINAL"
        arguments	= "%is_final%"
      END
    END

    ACTION_IF is_final >= 0
    BEGIN
      LAUNCH_ACTION_FUNCTION write_table_entry
        STR_VAR
        file		= "hidespl"
        row		= "%spell%"
        column		= "IS_REMOVED"
        arguments	= "%is_removed%"
      END
    END
  END
END


DEFINE_ACTION_FUNCTION add_to_contingx
  STR_VAR
  idsname	= ""
BEGIN
  LAUNCH_ACTION_FUNCTION RES_NUM_OF_SPELL_NAME
    STR_VAR
    spell_name	= "%idsname%"
    RET
    spell_res
  END

  COPY_EXISTING - "%spell_res%.spl" "%workspace%"
    LAUNCH_PATCH_FUNCTION SPL_read_level
      RET
      spell_level	= value
    END


  COPY_EXISTING "contingx.2da" "override"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows

    LAUNCH_PATCH_FUNCTION get_table_row_coordinate
      INT_VAR
      lookup_column	= spell_level
      STR_VAR
      row		= "****"
      RET
      rownum
    END

    PATCH_IF rownum == "-1"
    BEGIN
      SET rownum = rows
      
      LAUNCH_PATCH_FUNCTION append_numbered_row
        STR_VAR
	arguments	= ~****       ****       ****       ****       ****       ****       ****       ****       ****~
      END

      ++rows
    END

    SET_2DA_ENTRY rownum spell_level cols "%spell_res%"
    PRETTY_PRINT_2DA
END


DEFINE_ACTION_FUNCTION prevent_mutual_stacking
  INT_VAR
  opcode_for_clone	= 142
  STR_VAR
  ids_list		= ~~
  spell_list 		= ~~
BEGIN
  OUTER_WHILE ~%ids_list%~ STRING_COMPARE ~~
  BEGIN
    LAUNCH_ACTION_FUNCTION return_first_entry
      STR_VAR
      list	= "%ids_list%"
      RET
      idsname	= entry
      ids_list	= list
    END

    ACTION_IF VARIABLE_IS_SET "%idsname%"
    BEGIN
      OUTER_TEXT_SPRINT spell_list EVAL "%spell_list% %%idsname%%"
    END
  END

  ACTION_CLEAR_ARRAY no_stacking
  ACTION_DEFINE_ASSOCIATIVE_ARRAY no_stacking
  BEGIN
    var_spell_list=>"[%spell_list%]"
    delete_effect=>"opcode is_in [206 321] and resource is_in spell_list"
  END

  ACTION_IF enhanced_edition
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY no_stacking
    BEGIN
      add_effect_inline=>~number_to_add=>"length spell_list" insert_point=>0 opcode=>321 target=>2 power=>level resource=>"entry_index from spell_list"~
    END
  END
  ELSE
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY no_stacking
    BEGIN
      clone_effect_inline=>~number_to_add=>"length spell_list" clone_at_bottom=>1 only_once=>1 match=>"opcode = %opcode_for_clone%" opcode=>206 parameter2=>0 resource=>"entry_index from spell_list"~
    END
  END

  LAUNCH_ACTION_FUNCTION edit_spell
    INT_VAR
    allow_missing	= 1
    STR_VAR
    spell	= "%spell_list%"
    edits	= "no_stacking"
  END
END	// prevent_mutual_stacking


// Patch an item and, if it exists, also its externalized spell.
//
// Mosty used for IR compatibility, since IR externalizes most potion- and
// wand effects.

DEFINE_ACTION_FUNCTION edit_item_and_external_spell
  INT_VAR
  silent	= 0
  allow_missing	= 0
  tv		= 0
  STR_VAR
  item		= ""
  edits=""
  editstring	= ""
  location	= ""
  locbase	= ""
  locabs	= ""
BEGIN
  LAUNCH_ACTION_FUNCTION edit_template
    INT_VAR
    tv silent allow_missing
    STR_VAR file_list	= ~%item%~
    file_ext=~ITM~
    edits editstring location locbase locabs
  END

  ACTION_IF FILE_EXISTS_IN_GAME "%item%.spl"
  BEGIN
    LAUNCH_ACTION_FUNCTION edit_template
      INT_VAR
      tv silent allow_missing
      STR_VAR file_list	= ~%item%~
      file_ext=~SPL~
      edits editstring location locbase locabs
    END
  END
END


// Patch an item's externalized spell if it exists, otherwise patch the item.
//
// Mosty used for IR compatibility, since IR externalizes most potion- and
// wand effects.

DEFINE_ACTION_FUNCTION edit_item_or_external_spell
  INT_VAR
  silent	= 0
  allow_missing	= 0
  tv		= 0
  STR_VAR
  item		= ""
  edits=""
  editstring	= ""
  location	= ""
  locbase	= ""
  locabs	= ""
BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME "%item%.spl"
  BEGIN
    LAUNCH_ACTION_FUNCTION edit_template
      INT_VAR
      tv silent allow_missing
      STR_VAR file_list	= ~%item%~
      file_ext=~SPL~
      edits editstring location locbase locabs
    END
  END
  ELSE
  BEGIN
    LAUNCH_ACTION_FUNCTION edit_template
      INT_VAR
      tv silent allow_missing
      STR_VAR file_list	= ~%item%~
      file_ext=~ITM~
      edits editstring location locbase locabs
    END
  END
END


