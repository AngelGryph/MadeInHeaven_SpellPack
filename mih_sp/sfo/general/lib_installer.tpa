// Grand Unified Installer
//
// This mammoth can automatically install items and spells under the
// direction of tables.
//
// Note: Since this library gets loaded before SFO we can't use the
// MAKE_PATCH pseudo-code here!

DEFINE_ACTION_MACRO __handle_projectile
BEGIN
  ACTION_IF "%PROJ%" STRING_COMPARE "*"
  BEGIN
    ADD_PROJECTILE "%file_loc%/projectiles/%PROJ%.pro"
    OUTER_SET pronum = IDS_OF_SYMBOL("projectl" "%PROJ%") + 1
    
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      patch_ability_inline'2=>~projectile=>"%pronum%"~
    END

    ACTION_IF FILE_EXISTS "%file_loc%/%graphics_loc%/%PROJ%.bam"
    BEGIN
      LAUNCH_ACTION_FUNCTION install
        STR_VAR
        file		= "%PROJ%.bam"
        location	= "%graphics_loc%"
	locbase
      END
    END

    ACTION_IF FILE_EXISTS "%file_loc%/%graphics_loc%/%PROJ%.vvc"
    BEGIN
      LAUNCH_ACTION_FUNCTION install
        STR_VAR
        file		= "%PROJ%.vvc"
        location	= "%graphics_loc%"
	locbase
      END
    END
  END
END	// __handle_projectile


DEFINE_ACTION_MACRO __handle_half_damage
BEGIN
  ACTION_MATCH "%HALF%"
  WITH
  "dl"  // Level-based dice num
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and save_vs_spells" dicenum=>"ability_true_level" mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not save_vs_spells~
    END
  END

  "dd"	// Double damage.
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and (save_vs_death or save_vs_breath or save_vs_polymorph or save_vs_wands or save_vs_spells)" parameter1=>"parameter1 * 2" dicenum=>"dicenum * 2" mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not (save_vs_death or save_vs_breath or save_vs_polymorph or save_vs_wands or save_vs_spells)~
    END
  END

  "ff"	// Frost Fingers: Double param1 and set dicesize to 3.
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and save_vs_spells" parameter1=>"parameter1 * 2" dicesize=>3 mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not save_vs_spells~
    END
  END
  DEFAULT
  END
END	// __handle_half_damage


DEFINE_ACTION_MACRO __handle_allow_sequencer
BEGIN
  ACTION_IF "%SEQ%" STRING_EQUAL_CASE "n"
  BEGIN
    LAUNCH_ACTION_FUNCTION add_to_contingx
      STR_VAR
      idsname	= "%IDSNAME%"
    END
  END
END

DEFINE_ACTION_MACRO __handle_cd_immunity
BEGIN
  ACTION_IF "%CD_IMMUNITY%" STRING_COMPARE "*"
  BEGIN
    OUTER_PATCH_SAVE cd_immunity_list "%CD_IMMUNITY%"
    BEGIN
      REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH "," " "
    END

    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      cd_immunity=>"%cd_immunity_list%"
    END
  END
END	// __handle_cd_immunity


DEFINE_ACTION_FUNCTION __handle_main_items
  STR_VAR
  RESREF	= ~~
  NAME		= ~~
  DESC		= ~~
  UNNAME	= ~~
  UNDESC	= ~~
  EXCL		= ~~
  PROJ		= ~~
  CD_IMMUNITY	= ~~
BEGIN
  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "max_stack_ammo"
    RET
    max_stack_ammo	= value
  END

  ACTION_IF (max_stack_ammo == 0)
  BEGIN
    OUTER_SET max_stack_ammo = enhanced_edition ? 80 : 40
  END

  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "max_stack_thrown"
    RET
    max_stack_thrown	= value
  END

  ACTION_IF (max_stack_thrown == 0)
  BEGIN
    OUTER_SET max_stack_thrown = enhanced_edition ? 40 : 10
  END

  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "max_stack_potions"
    RET
    max_stack_potions	= value
  END

  ACTION_IF (max_stack_potions == 0)
  BEGIN
    OUTER_SET max_stack_potions = enhanced_edition ? 24 : 5
  END

  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "max_stack_jewels"
    RET
    max_stack_jewels	= value
  END

  ACTION_IF (max_stack_jewels == 0)
  BEGIN
    OUTER_SET max_stack_jewels = 20	// Not changed between old and EE.
  END


  ACTION_CLEAR_ARRAY object_data
  ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
  BEGIN
    max_in_stack=>~if max_in_stack > 1 and category = 9 then %max_stack_potions% else if max_in_stack > 1 and category is_in [5 14 24 31] then %max_stack_ammo% else if max_in_stack > 1 and category is_in [16 25] then %max_stack_thrown% else if max_in_stack > 1 and category is_in [1 10 34] then %max_stack_jewels% else no_change~
  END

  ACTION_IF IS_AN_INT NAME
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      say_name=>"%NAME%"
    END
  END

  ACTION_IF IS_AN_INT DESC
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      say_description=>"%DESC%"
    END
  END

  ACTION_IF IS_AN_INT UNNAME
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      say_unidentified_name=>"%UNNAME%"
    END
  END

  ACTION_IF IS_AN_INT UNDESC
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      say_unidentified_description=>"%DESC%"
    END
  END


  // Check/handle item exclude

  ACTION_IF IS_AN_INT EXCL AND EXCL > 0
  BEGIN
    LAUNCH_ACTION_FUNCTION edit_itemexcl
      INT_VAR
      mask	= EXCL
      STR_VAR
      item	= "%RESREF%"
    END
  END


  // Check/handle projectile

  LAUNCH_ACTION_MACRO __handle_projectile


  // Check/handle immunities

  LAUNCH_ACTION_MACRO __handle_cd_immunity


  // Install and patch the actual item file.

  LAUNCH_ACTION_FUNCTION install_item
    STR_VAR
    item	= "%RESREF%"
    location	= "%items_loc%"
    edits	= "object_data"
    locbase
  END
END	// __handle_main_items


DEFINE_ACTION_FUNCTION __handle_main_spells
  STR_VAR
  IDSNAME	= ~~
  LEVEL		= ~~
  NAME		= ~~
  DESC		= ~~
  TYPE		= ~~
  IDSNUM	= ~~
  SCROLL	= ~~
  HALF		= ~~
  PROJ		= ~~
  SEQ		= ~~
  CD_IMMUNITY	= ~~
BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME "hidespl.2da"
  BEGIN
    LAUNCH_ACTION_FUNCTION definalise_hidespl END
  END


  // Obtain a slot in spell.ids

  ACTION_IF IS_AN_INT IDSNUM
  BEGIN
    APPEND "spell.ids" "%IDSNUM% %IDSNAME%" UNLESS "^%IDSNUM%"
    CLEAR_IDS_MAP
  END

  LAUNCH_ACTION_FUNCTION add_spell_to_ids
    INT_VAR
    type	= "%TYPE%"
    level	= "%LEVEL%"
    STR_VAR
    idsname	= "%IDSNAME%"
    RET
    newname
  END


  // We know the new resource now, patch stuff in.

  ACTION_CLEAR_ARRAY object_data

  ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
  BEGIN
    patch_effect_inline'1=>~match=>"resource = ##SELF##" resource=>"%newname%"~
  END


  // Look for any icon files we have that need installing.

  ACTION_IF FILE_EXISTS "%file_loc%/%graphics_loc%/%IDSNAME%_a.bam"
  BEGIN
    COPY_LARGE "%file_loc%/%graphics_loc%/%IDSNAME%_a.bam" "override/%newname%a.bam"
  END

  ACTION_IF FILE_EXISTS "%file_loc%/%graphics_loc%/%IDSNAME%_b.bam"
  BEGIN
    COPY_LARGE "%file_loc%/%graphics_loc%/%IDSNAME%_b.bam" "override/%newname%b.bam"
  END

  ACTION_IF FILE_EXISTS_IN_GAME "%newname%b.bam"
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      patch_ability_inline'1=>~ability_icon=>"%newname%b"~
    END
  END

  ACTION_IF FILE_EXISTS "%file_loc%/%graphics_loc%/%IDSNAME%_c.bam"
  BEGIN
    COPY_LARGE "%file_loc%/%graphics_loc%/%IDSNAME%_c.bam" "override/%newname%c.bam"
  END

  ACTION_IF FILE_EXISTS_IN_GAME "%newname%c.bam"
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      icon=>"%newname%c"
    END
  END


  // Add name/description strings if we have them.

  ACTION_IF IS_AN_INT "%NAME%"
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      say_name=>"%NAME%"
    END
  END

  ACTION_IF IS_AN_INT "%DESC%"
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      say_description=>"%DESC%"
    END
  END


  // Check/handle EE half damage

  LAUNCH_ACTION_MACRO __handle_half_damage


  // Check/handle projectile

  LAUNCH_ACTION_MACRO __handle_projectile


  // Check/handle immunities

  LAUNCH_ACTION_MACRO __handle_cd_immunity


  // Install and patch the actual spell file.

  COPY + "%file_loc%/%spells_loc%/%IDSNAME%.spl" "%workspace%/%newname%.spl"

  LAUNCH_ACTION_FUNCTION install_spell
  STR_VAR
    spell	= "%newname%"
    locabs	= "%workspace%"
    edits	= "object_data"
  END

  DELETE + "%workspace%/%newname%.spl"


  // Create a scroll if one is requested.

  ACTION_IF "%SCROLL%" STRING_COMPARE "*"
  BEGIN
    LAUNCH_ACTION_FUNCTION make_scroll_of_spell
      STR_VAR
      resref		= "%newname%"
      scrollname	= "%SCROLL%"
    END
  END


  // Update contingx.2da if needed

  LAUNCH_ACTION_MACRO __handle_allow_sequencer
END	// __handle_main_spells


DEFINE_ACTION_FUNCTION __handle_simple_items
  STR_VAR
  RESREF	= ""
  NAME		= ""
  DUMMY		= ""
BEGIN
  ACTION_CLEAR_ARRAY object_data

  ACTION_IF IS_AN_INT NAME
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
    BEGIN
      say_both_names=>"%NAME%"
    END
  END

  LAUNCH_ACTION_FUNCTION install_item
  STR_VAR
    item	= "%RESREF%"
    location	= "%items_loc%"
    edits	= "object_data"
    locbase
  END
END	// __handle_simple_items


DEFINE_ACTION_FUNCTION __handle_simple_spells
  STR_VAR
  RESREF	= ""
  PROJ		= ""
  HALF		= ""
BEGIN
  ACTION_CLEAR_ARRAY object_data


  // Check/handle projectile

  LAUNCH_ACTION_MACRO __handle_projectile


  // Check/handle EE half damage

  LAUNCH_ACTION_MACRO __handle_half_damage


  // Install the actual spell file.

  LAUNCH_ACTION_FUNCTION install_spell
  STR_VAR
    spell	= "%RESREF%"
    location	= "%spells_loc%"
    edits	= "object_data"
    locbase
  END
END	// __handle_simple_spells


DEFINE_ACTION_FUNCTION __handle_simple_creatures
  STR_VAR
  RESREF	= ~~
  NAME		= ~~
  VVC		= ~~
BEGIN
  ACTION_IF IS_AN_INT "%NAME%"
  BEGIN
    OUTER_TEXT_SPRINT editstring "say_both_names=>%NAME%"
  END
  ELSE
  BEGIN
    OUTER_TEXT_SPRINT editstring ""
  END

  LAUNCH_ACTION_FUNCTION install_creature
  STR_VAR
    creature	= "%RESREF%"
    location	= "%creatures_loc%"
    editstring
    locbase
  END
	
  ACTION_IF "%VVC%" STRING_COMPARE_CASE "*"
  BEGIN
    LAUNCH_ACTION_FUNCTION make_effect
      STR_VAR
      effect		= "%RESREF%"
      editstring	= ~opcode=>67 timing=>1 parameter1=>5 resource=>"%RESREF%" vvc=>"%VVC%"~
    END
  END
END	// __handle_simple_creatures


DEFINE_ACTION_FUNCTION __handle_simple_effects
  STR_VAR
  RESREF	= ~~
  OPCODE	= ~~
  PARAMETER1	= ~~
  PARAMETER2	= ~~
  PARAMETER3	= ~~
  PARAMETER4	= ~~
  DICENUM	= ~~
  DICESZ	= ~~
  RESOURCE	= ~~
  VVC		= ~~
BEGIN
  ACTION_CLEAR_ARRAY object_data

  ACTION_DEFINE_ASSOCIATIVE_ARRAY object_data
  BEGIN
    litvar_summon=>"%RESOURCE%"
    litvar_visual=>"%VVC%"
    litvar_empty=>"$"
    opcode=>"%OPCODE%"
    timing=>1
    parameter1=>"%PARAMETER1%"
    parameter2=>"%PARAMETER2%"
    parameter3=>"%PARAMETER3%"
    parameter4=>"%PARAMETER4%"
    dicenum=>"%DICENUM%"
    dicesize=>"%DICESZ%"
    resource=>"if (summon = empty) then no_change else summon"
    vvc=>"if (visual = empty) then no_change else visual"
  END

  LAUNCH_ACTION_FUNCTION make_effect
    STR_VAR
    effect	= "%RESREF%"
    edits	= "object_data"
  END
END	// __handle_simple_effects


DEFINE_ACTION_FUNCTION grand_unified_installer
  STR_VAR
  main_items		= "items"
  main_spells		= "spells"
  main_stores		= "stores"
  simple_items		= "simple_items"
  simple_spells		= "simple_spells"
  simple_creatures	= "simple_creatures"
  simple_effects	= "simple_effects"
  copy_files		= "_copy"
  items_loc		= "items"
  spells_loc		= "spells"
  creatures_loc		= "actors"
  graphics_loc		= "graphics"
  tables_loc		= "tables"
  tra			= ""
  locbase		= ""
  locabs		= ""
BEGIN
  LAUNCH_ACTION_FUNCTION get_directory
    STR_VAR
    location
    locbase
    locabs
    RET
    file_loc	= directory
  END

  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "use_ee_half_damage"
    RET
    use_ee_half_damage	= value
  END


  // Handle tra file setting

  ACTION_IF "%tra%" STRING_EQUAL ""
  BEGIN
    OUTER_TEXT_SPRINT tra "%file_loc%"
  END


  // Main action starts here

  WITH_TRA "%scs_tra_loc%/english/%tra%.tra"
   "%scs_tra_loc%/%LANGUAGE%/%tra%.tra"
  BEGIN
    // Copy anything that just needs copying

    ACTION_IF "%copy_files%" STRING_COMPARE ""
    BEGIN
      COPY_LARGE "%file_loc%/%copy_files%" "override"
    END


    // Simple items, creature paws & stuff

    ACTION_IF "%simple_items%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%simple_items%.2da"
    BEGIN
      LAUNCH_ACTION_FUNCTION process_table
        STR_VAR
	table		= "%simple_items%.2da"
	function	= "__handle_simple_items"
	location	= "%tables_loc%"
	locbase
      END
    END


    // Simple spells, repeating spells and such

    ACTION_IF "%simple_spells%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%simple_spells%.2da"
    BEGIN
      LAUNCH_ACTION_FUNCTION process_table
        STR_VAR
	table		= "%simple_spells%.2da"
	function	= "__handle_simple_spells"
	location	= "%tables_loc%"
	locbase
      END
    END


    // Simple creatures, summons and such

    ACTION_IF "%simple_creatures%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%simple_creatures%.2da"
    BEGIN
      LAUNCH_ACTION_FUNCTION process_table
        STR_VAR
	table		= "%simple_creatures%.2da"
	function	= "__handle_simple_creatures"
	location	= "%tables_loc%"
	locbase
      END
    END


    // Simple effects

    ACTION_IF "%simple_effects%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%simple_effects%.2da"
    BEGIN
      LAUNCH_ACTION_FUNCTION process_table
        STR_VAR
	table		= "%simple_effects%.2da"
	function	= "__handle_simple_effects"
	location	= "%tables_loc%"
	locbase
      END
    END


    // Main items

    ACTION_IF "%main_items%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%main_items%.2da"
    BEGIN
      LAUNCH_ACTION_FUNCTION process_table
        STR_VAR
	table		= "%main_items%.2da"
	function	= "__handle_main_items"
	location	= "%tables_loc%"
	locbase
      END
    END


    // Main spells

    ACTION_IF "%main_spells%" STRING_COMPARE ""
          AND FILE_EXISTS "%file_loc%/%tables_loc%/%main_spells%.2da"
    BEGIN
      LAUNCH_ACTION_FUNCTION process_table
        STR_VAR
	table		= "%main_spells%.2da"
	function	= "__handle_main_spells"
	location	= "%tables_loc%"
	locbase
      END
    END
  END
END	// grand_unified_installer


