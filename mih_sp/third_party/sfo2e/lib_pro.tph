/*
describe-library{General editors for pro files, mostly using the lib_struct system.}

*/


/*
document{pro_edit}
{General editor for pro files, in the normal lib_struct format.}
*/

DEFINE_ACTION_FUNCTION pro_edit
	INT_VAR allow_missing=0
			debug=1
	STR_VAR pro=""
			path=""
			location=""
			locbase=""
			edits=""
BEGIN
	LAF struct_edit INT_VAR allow_missing debug STR_VAR file="%pro%" ext=pro path location locbase edits END
END

/*
document{pro_copy}
{General copier for pro files. Each pro file copied over will be added to projectl.ids if not already present. The function returns the ids number of the last pro to be added. 'missile' is the entry in missile.ids (defaults to the projectile name); only really works when adding only one missile at a time.}
*/
			
DEFINE_ACTION_FUNCTION pro_copy
	INT_VAR allow_missing=0
			debug=1
	STR_VAR pro=""
			source_path=""
			source_location=""
			source_locbase=""
			path=""
			location=""
			locbase=""
			edits=""
			missile_entry=""
	RET value
			
BEGIN
	OUTER_SPRINT value "-1"
	ACTION_IF INDEX ("=>" "%pro%")>=0 BEGIN
		OUTER_WHILE "%pro%" STR_CMP "" BEGIN
			LAF return_first_pair STR_VAR list="%pro%" RET sourcefile=key destfile=value pro=list END
			LAF ids_resolve INT_VAR min=300 STR_VAR ids="%destfile%" idsfile=projectl RET value END
			LAF struct_copy INT_VAR allow_missing debug STR_VAR file="%sourcefile%=>%destfile%" ext=pro path location locbase source_path source_location source_locbase edits END
			ACTION_IF "%missile_entry%" STR_EQ "" BEGIN
				OUTER_SPRINT missile_entry "%destfile%"
			END
			OUTER_SET value_missile=value+1
			APPEND "missile.ids" "%value_missile%%TAB%%missile_entry%"
		END
	END ELSE BEGIN
		OUTER_WHILE "%pro%" STR_CMP "" BEGIN
			LAF return_first_entry STR_VAR list="%pro%" RET file=entry pro=list END
			LAF ids_resolve INT_VAR min=300 STR_VAR ids="%file%" idsfile=projectl RET value END
			LAF struct_copy INT_VAR allow_missing debug STR_VAR file ext=pro path location locbase source_path source_location source_locbase edits END
			ACTION_IF "%missile_entry%" STR_EQ "" BEGIN
				OUTER_SPRINT missile_entry "%file%"
			END
			OUTER_SET value_missile=value+1
			APPEND "missile.ids" "%value_missile%%TAB%%missile_entry%"
		END
	
	END

END

/*
document{pro_make}
{General maker for pro files. Each pro file made will be added to projectl.ids if not already present. The function returns the ids number of the last pro to be added.}
*/

DEFINE_ACTION_FUNCTION pro_make
	INT_VAR debug=1
	STR_VAR	pro=""
			version=""
			path=""
			location=""
			locbase=""
			edits=""
	RET value
BEGIN
		OUTER_WHILE "%pro%" STR_CMP "" BEGIN
			LAF return_first_entry STR_VAR list="%pro%" RET file=entry pro=list END
			LAF ids_resolve INT_VAR min=1 STR_VAR ids="%file%" idsfile=projectl RET value END
			LAF struct_make INT_VAR debug STR_VAR file ext=pro path location locbase edits END
		END
END

