///////////////////////////////////////////////////////////////////////////////////
///    Add some new portraits into the system, or modify existing ones (EE only)
///
///		The portraits should be listed in a 2DA table of form
///
///		       skin	hair	major	minor	race		sex		class		disabled
/// EXAMPLE	   INT	INT		INT		INT		human		female	fighter		no	
///
/// (any of these columns can be missing, in which case defaults are assumed.) The function generates
/// a master table of this form which lives in the 'shared' subdirectory of weidu_external (specifically,
/// at weidu_external/data/shared/dw_portraits.2da)
///
/// The first time the function is run, this table is created; also the UI is edited to include the needed color-preset changes
///
///	'race' can be any of human, halfelf, elf, dwarf, halfling, gnome, halforc, special (the default).
/// 'class' can be fighter, wizard, cleric, thief, bard, barbarian, special (the default).
/// 'sex' can be f, m, fm (the default).
/// 'disabled' can be yes or no (the default).

/// The bmps themselves should be named as follows:
///	- EXAMPLEhires.bmp (for large high-resolution portraits) - copied to the L slot
/// - EXAMPLE330.bmp - also copied to the L slot
/// - EXAMPLEL.bmp - copied direct to the L slot
/// - EXAMPLE269.bmp - copied to the M slot
/// - EXAMPLEM.bmp - copied to the M slot

/// give the function these variables:
///
/// portrait_table: the full path to a new table, of the above form, to be added
/// portrait_path: the path to the directory containing any new portrait BMPs listed in the table (or, if no table is given, containing any 
/// portrait BMPs just to be copied over directly - mostly applies to the core IWD/BG/BG2 portraits)
/// disable: a list, separated by spaces, of portrait base names to disable from the system
/// enable: a list, separated by spaces, of portrait base names to enable in the systems
/// lua_loc: the path to a folder containing the SFO_LUA lua libraries


DEFINE_ACTION_FUNCTION ui_add_portraits
	STR_VAR portrait_path=""
			portrait_table=""
			disable=""
			enable=""
			lua_loc="lua"
BEGIN

// set up original portrait data if needed

<<<<<<<< .../stratagems-inline/dw_portrait_data.2da
2DA V1.0
*
			skin	hair	major	minor	race		sex		class     disabled
>>>>>>>>


	ACTION_IF !FILE_EXISTS "%data_loc_shared%/dw_portrait_data.2da" BEGIN
		COPY ".../stratagems-inline/dw_portrait_data.2da" "%data_loc_shared%"

		ACTION_FOR_EACH game IN iwd bg bg2 BEGIN
			LAF add_to_portrait_tables_helper
				STR_VAR to_read="%MOD_FOLDER%/%lua_loc%/portrait_data/portrait_data_%game%.2da"
						to_add_to="%data_loc_shared%/dw_portrait_data.2da"
			END		
		END
	END
	
// get parameters for portrait data in bgee.lua; extract data

COPY_EXISTING "bgee.lua" "%workspace%" 
	SET index=INDEX_BUFFER ("Portraits")
	LPF find_parenthesis_range STR_VAR index RET start end END
	READ_ASCII start+1 bgee_data (end - start - 1)
BUT_ONLY

// get a list of all portraits currently in the system

<<<<<<<< .../stratagems-inline/dw_portrait_default.2da
2DA V1.0
*

		sex		race	class
>>>>>>>>
COPY ".../stratagems-inline/dw_portrait_default.2da" "%workspace%"


OUTER_INNER_PATCH "%bgee_data%" BEGIN
	REPLACE_TEXTUALLY "--.*" "" // remove lua comments
	REPLACE_EVALUATE "{ *'\([^']*\)', *\([0-9]\)}" BEGIN
		INNER_ACTION BEGIN
			APPEND_OUTER "%workspace%/dw_portrait_default.2da" "%MATCH1% %MATCH2% special special"
		END
	END
	""
END

// add them on if not present
	LAF add_to_portrait_tables_helper
		INT_VAR warn_of_repeats=0
		STR_VAR to_read="%workspace%/dw_portrait_default.2da"
				to_add_to="%data_loc_shared%/dw_portrait_data.2da"
	END
	
	///////////////////////////////////////
	/// At this stage we're initialised
	///////////////////////////////////////
	
	////// Add new portraits ///////////////

	ACTION_IF "%portrait_table%" STRING_COMPARE "" BEGIN
		// add the data
		LAF add_to_portrait_tables_helper
			STR_VAR to_read="%portrait_table%"
				to_add_to="%data_loc_shared%/dw_portrait_data.2da"
		END
		// add the portraits themselves
		COPY "%portrait_table%" "%workspace%"
		  COUNT_2DA_COLS colcount
		  READ_2DA_ENTRIES_NOW portrait_table colcount
			FOR (row=0;row<portrait_table;++row) BEGIN
				READ_2DA_ENTRY_FORMER portrait_table row 0 resref_base
				TO_UPPER resref_base
				INNER_ACTION BEGIN
					ACTION_IF FILE_EXISTS "%portrait_path%/%resref_base%hi_res.bmp" BEGIN
						COPY "%portrait_path%/%resref_base%hi_res.bmp" "override/%resref_base%L.bmp"
					END ELSE 
					ACTION_IF FILE_EXISTS "%portrait_path%/%resref_base%330.bmp" BEGIN
						COPY "%portrait_path%/%resref_base%330.bmp" "override/%resref_base%L.bmp"					
					END ELSE
					ACTION_IF FILE_EXISTS "%portrait_path%/%resref_base%L.bmp" BEGIN
						COPY "%portrait_path%/%resref_base%L.bmp" "override/%resref_base%L.bmp"	
					END
					ACTION_IF FILE_EXISTS "%portrait_path%/%resref_base%269.bmp" BEGIN // IWD style					
						COPY "%portrait_path%/%resref_base%269.bmp" "override/%resref_base%M.bmp"					
					END ELSE	
					ACTION_IF FILE_EXISTS "%portrait_path%/%resref_base%M.bmp" BEGIN // IWD style					
						COPY "%portrait_path%/%resref_base%M.bmp" "override/%resref_base%M.bmp"					
					END
				END
			END
		BUT_ONLY
	END
	
	///// Add missing portraits from the core list
	
	ACTION_IF "%portrait_table%" STRING_EQUAL "" && "%portrait_path%" STRING_COMPARE "" BEGIN
		COPY "%portrait_path%" override
	END
	
	
	///// Enable/disable portraits


	ACTION_CLEAR_ARRAY portrait_disable_array
	ACTION_IF "%disable%" STRING_COMPARE "" BEGIN
		OUTER_PATCH "%disable% " BEGIN
			REPLACE_EVALUATE "\([^ ]+\) " BEGIN
				SPRINT portrait "%MATCH1%"
				TO_UPPER portrait
				SPRINT $portrait_disable_array("%portrait%") "yes"
			END
			""
		END		
	END
	ACTION_IF "%enable%" STRING_COMPARE "" BEGIN
		OUTER_PATCH "%enable% " BEGIN
			REPLACE_EVALUATE "\([^ ]+\) " BEGIN
				SPRINT portrait "%MATCH1%"
				TO_UPPER portrait
				SPRINT $portrait_disable_array("%portrait%") "no"
			END
			""
		END		
	END
	

	ACTION_IF "%disable%%enable%" STRING_COMPARE "" BEGIN
		COPY "%data_loc_shared%/dw_portrait_data.2da" "%data_loc_shared%"
			COUNT_2DA_COLS colcount
			COUNT_2DA_ROWS colcount rowcount
			FOR (col=1; col<colcount;++col) BEGIN
				READ_2DA_ENTRY 0 (col - 1) (colcount - 1) header
				PATCH_IF "%header%" STRING_EQUAL_CASE disabled BEGIN
					SET disable_column=col
				END
			END
			FOR (row=0;row<rowcount;++row) BEGIN
				READ_2DA_ENTRY row 0 colcount portrait
				TO_UPPER portrait
				PATCH_IF VARIABLE_IS_SET $portrait_disable_array("%portrait%") BEGIN
					SPRINT temp $portrait_disable_array("%portrait%")
					SET_2DA_ENTRY row disable_column colcount "%temp%"
				END
			END
		BUT_ONLY
	END
	
	////////////////////////////////////////////
	/// Finish by actually installing
	////////////////////////////////////////////

	LAF install_portraits STR_VAR lua_loc END
	
END

////////////////////////////////////////////////////////////////////////////////////////////////////
// Helper function for the add function
//
// lightly adapted version of the function in add_subraces
////////////////////////////////////////////////////////////////////////////////////////////////////
DEFINE_ACTION_FUNCTION add_to_portrait_tables_helper
	INT_VAR warn_of_repeats=0
	STR_VAR to_read=""
			to_add_to=""
BEGIN
	// get data to add
	COPY "%to_read%" "%workspace%"
		COUNT_2DA_COLS colcount
		READ_2DA_ENTRIES_NOW to_read_table colcount
		FOR (col=0;col<colcount;++col) BEGIN
			PATCH_IF col>0 BEGIN
				READ_2DA_ENTRY 0 (col - 1) (colcount - 1) header
			END ELSE BEGIN
				SPRINT header COL_IDENT
			END
			FOR (row=0;row<to_read_table;++row) BEGIN				
				READ_2DA_ENTRY_FORMER to_read_table row col entry
				TO_LOWER entry
				SPRINT $new_data("%row%" "%header%") "%entry%"
			END
		END
	BUT_ONLY
	// get column locations for main table; also get idents, to check for repeats
	COPY "%to_add_to%" "%workspace%"
		COUNT_2DA_COLS colcount_main
		COUNT_2DA_ROWS colcount_main rowcount
		FOR (row=0;row<rowcount;++row) BEGIN
			READ_2DA_ENTRY row 0 colcount_main ident
			SPRINT $old_idents("%ident%") ""
		END
		COUNT_2DA_ROWS (colcount_main - 1) check
		PATCH_IF rowcount=check BEGIN
			colcount_main +=1
		END 		
		SPRINT $col_header("0") "COL_IDENT"
		FOR (col=1;col<colcount_main;++col) BEGIN
			READ_2DA_ENTRY 0 (col - 1) (colcount_main - 1) header
			SPRINT $col_header("%col%") "%header%"
		END
	BUT_ONLY
	// build the data
	OUTER_SPRINT to_write ""
	OUTER_FOR (row=0;row<to_read_table;++row) BEGIN
	 OUTER_SPRINT ident_here $new_data("%row%" "COL_IDENT")
	 ACTION_IF VARIABLE_IS_SET $old_idents("%ident_here%") BEGIN
		ACTION_IF warn_of_repeats BEGIN
			WARN "Entry %ident_here% in table %to_read% already exists in table %to_add_to%; this entry will be skipped"
		END
	 END ELSE BEGIN
		ACTION_IF row>0 BEGIN
			OUTER_SPRINT to_write "%to_write%%WNL%"
		END
		OUTER_FOR (col=0;col<colcount_main;++col) BEGIN
			OUTER_SPRINT header $col_header("%col%")
			ACTION_IF VARIABLE_IS_SET $new_data("%row%" "%header%") BEGIN
				OUTER_SPRINT temp $new_data("%row%" "%header%")
				OUTER_SPRINT to_write "%to_write%  %temp%"
			END ELSE BEGIN
				ACTION_MATCH "%header%" WITH
				sex BEGIN
					OUTER_SPRINT default "fm"
				END
				race class BEGIN
					OUTER_SPRINT default "special"
				END
				disabled BEGIN
					OUTER_SPRINT default "no"
				END
				DEFAULT
					OUTER_SPRINT default "-1"
				END
				OUTER_SPRINT to_write "%to_write%  %default%"
			END		
		END
	 END
	END
	// write the data
	ACTION_IF "%to_write%" STRING_COMPARE_CASE "" BEGIN
		APPEND_OUTER "%to_add_to%" "%to_write%" KEEP_CRLF
		// tidy up
		COPY "%to_add_to%" "%to_add_to%" PRETTY_PRINT_2DA
	END
END

////////////////////////////////////////////////////////////////////////////////////////////////////
// Actually install into the lua system
////////////////////////////////////////////////////////////////////////////////////////////////////


DEFINE_ACTION_FUNCTION install_portraits
	STR_VAR	lua_loc="lua"
BEGIN
	// get the data
	LAF read_portrait_data
		RET_ARRAY 
				portrait_skin
				portrait_hair
				portrait_major
				portrait_minor
				portrait_sex
				portrait_race
				portrait_class
	END
	// make the lists
	LAF sort_portrait_data STR_VAR sex=f RET_ARRAY portrait_list_f=sorted_array END
	LAF sort_portrait_data STR_VAR sex=m RET_ARRAY portrait_list_m=sorted_array END

	// generate lua code
	OUTER_SPRINT "bgee_new" "%WNL%"
	ACTION_PHP_EACH portrait_list_m AS portrait=>discard BEGIN
		// does it exist?
		ACTION_IF FILE_EXISTS_IN_GAME "%portrait%L.bmp" BEGIN
		  ACTION_TO_UPPER portrait
		  OUTER_SPRINT bgee_new "%bgee_new%%TAB%{'%portrait%',1},%WNL%"
		END
	END
	ACTION_PHP_EACH portrait_list_f AS portrait=>discard BEGIN
		// does it exist?
		ACTION_IF FILE_EXISTS_IN_GAME "%portrait%L.bmp" BEGIN
		  ACTION_TO_UPPER portrait
		  OUTER_SPRINT bgee_new "%bgee_new%%TAB%{'%portrait%',2},%WNL%"
		END
	END
	OUTER_INNER_PATCH_SAVE bgee_new "%bgee_new%" BEGIN
		DELETE_BYTES (BUFFER_LENGTH - 2) 1 // last comma 
		SET new_length=BUFFER_LENGTH
	END
	//PRINT "%bgee_new%"
	
	// insert into bgee.lua
	
	COPY_EXISTING "bgee.lua" override
		SET index=INDEX_BUFFER ("Portraits")
		LPF find_parenthesis_range STR_VAR index RET start end END
		DELETE_BYTES start+1 (end - start - 1)
		INSERT_BYTES start+1 new_length
		WRITE_ASCIIE start+1 "%bgee_new%"
	BUT_ONLY


	// shared LUA changes
	
	LAF shared_color_changes END
	
	// write color data into LUA
	
	COPY ".../stratagems-inline/blank" "override/m_dw_ptc.lua"
	APPEND "m_dw_ptc.lua" "dwPortraitList = {}%WNL%"
	
	ACTION_PHP_EACH portrait_skin AS ident=>skin BEGIN
		OUTER_SPRINT hair $portrait_hair("%ident%")
		OUTER_SPRINT minor $portrait_minor("%ident%")
		OUTER_SPRINT major $portrait_major("%ident%")
		ACTION_TO_UPPER ident
		APPEND "m_dw_ptc.lua" ~dwPortraitList["%ident%L"]= {skin=%skin%, hair=%hair%, major=%major%,minor=%minor%}~ KEEP_CRLF
	END

END



////////////////////////////////////////////////////////////////////////////////////////////////////
// Read in all the data
////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION read_portrait_data 
	RET_ARRAY	portrait_skin
				portrait_hair
				portrait_major
				portrait_minor
				portrait_sex
				portrait_race
				portrait_class
BEGIN
	COPY "%data_loc_shared%/dw_portrait_data.2da" "%workspace%"
		COUNT_2DA_COLS colcount
		READ_2DA_ENTRIES_NOW all_portraits_table colcount 
		FOR (col=1;col<colcount; ++col) BEGIN
			READ_2DA_ENTRY 0 (col - 1) (colcount - 1) header
			SPRINT $col_header("%col%") "%header%"
		END
		FOR (row=0;row<all_portraits_table;++row) BEGIN
			READ_2DA_ENTRY_FORMER all_portraits_table row 0 ident
			FOR (col=0;col<colcount;++col) BEGIN
				SPRINT header $col_header("%col%")
				READ_2DA_ENTRY_FORMER all_portraits_table row col temp
				SPRINT $working("%header%") "%temp%"			
			END
			PATCH_IF "%working_disabled%" STRING_COMPARE_CASE "yes" && FILE_EXISTS_IN_GAME "%ident%L.bmp" BEGIN 
				PATCH_FOR_EACH entry IN skin hair minor major sex race class BEGIN
					SPRINT array "portrait_%entry%"
					SPRINT $"%array%"("%ident%") $working("%entry%")
				END
			END
		END
	BUT_ONLY

END

////////////////////////////////////////////////////////////////////////////////////////////////////
// Sort the portraits
////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION sort_portrait_data STR_VAR sex="" RET_ARRAY sorted_array
BEGIN

ACTION_DEFINE_ASSOCIATIVE_ARRAY portrait_class_map BEGIN
	fighter=>1
	thief=>2
	cleric=>3
	wizard=>4
	bard=>5
	barbarian=>6
	special=>7
END
ACTION_DEFINE_ASSOCIATIVE_ARRAY portrait_race_map BEGIN
	human=>1
	halfelf=>2
	elf=>3
	dwarf=>4
	gnome=>5
	halfling=>6
	halforc=>7
	special=>8
END

// get a list by sex, sortable by key
	ACTION_CLEAR_ARRAY working_array
	ACTION_PHP_EACH portrait_sex AS ident=>sex_here BEGIN
		ACTION_MATCH "%sex_here%" WITH
			"%sex%" mf fm BEGIN
				OUTER_SPRINT race $portrait_race("%ident%")
				OUTER_SPRINT race_id $portrait_race_map("%race%")
				OUTER_SPRINT class $portrait_class("%ident%")
				OUTER_SPRINT class_id $portrait_class_map("%class%")
				OUTER_SPRINT key "%race_id%-%class_id%-%ident%"
				OUTER_SPRINT $working_array("%key%") "%ident%"
			END
		DEFAULT
		END
	END
	
	// sort it
	
	ACTION_SORT_ARRAY_INDICES working_array LEXICOGRAPHICALLY
	ACTION_CLEAR_ARRAY sorted_array
	ACTION_PHP_EACH working_array AS discard=>portrait BEGIN
		OUTER_SPRINT $sorted_array("%portrait%") ""
	END

END

////////////////////////////////////////////////////////////////////////////////////////////////////
// Activate the portrait-coloring code
////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION activate_portrait_coloring BEGIN

	ACTION_IF !RESOURCE_CONTAINS "m_dw_shr.lua" "dwPortraitColorsActivated=true" BEGIN
		APPEND "m_dw_shr.lua" "dwPortraitColorsActivated=true" KEEP_CRLF
	END
END


