
DEFINE_ACTION_FUNCTION ui_spell_system_spheres
	STR_VAR path="sphere"
			list="sphere_list.2da"
			tra="sphere"
			tra_path="%MOD_FOLDER%/lang"
			base_tra=sfo_lua
			base_tra_path="DEFAULT"
BEGIN
	ACTION_IF !VARIABLE_IS_SET marker_loc BEGIN
		OUTER_SPRINT marker_loc "weidu_external/markers"
	END
	ACTION_IF !VARIABLE_IS_SET lua_loc BEGIN
		OUTER_SPRINT lua_loc lua
	END
	ACTION_IF "%base_tra_path%" STR_EQ "DEFAULT" BEGIN
		OUTER_SPRINT base_tra_path "%MOD_FOLDER%/%lua_loc%/lang"
	END
	ACTION_IF !VARIABLE_IS_SET data_loc BEGIN
		OUTER_SPRINT data_loc "weidu_external/data/%MOD_FOLDER%"
	END
	ACTION_IF !VARIABLE_IS_SET data_loc_shared BEGIN
		OUTER_SPRINT data_loc_shared "weidu_external/data/dw_shared"
	END	

	ACTION_IF !FILE_EXISTS "%marker_loc%/dw#spheres_installed.mrk" BEGIN

		COPY_EXISTING "misc01.itm" "%marker_loc%/dw#spheres_installed.mrk"
		
		// install spell system
		
		ACTION_IF !VARIABLE_IS_SET lua_loc BEGIN
			OUTER_SPRINT lua_loc "lua"
		END
		INCLUDE "%MOD_FOLDER%/%lua_loc%/ui_spell_system.tph" 
		
		ACTION_CLEAR_ARRAY nonempty_spheres
		
		// get sphere name-ids maps
		
		LAF get_sphere_data STR_VAR path list tra tra_path RET_ARRAY sphere_ids sphere_name sphere_defaults END
		
		ACTION_SORT_ARRAY_INDICES sphere_ids LEXICOGRAPHICALLY 
		
		// go through each sphere and create a list of its spells; generate that list in LUA; record the spheres for the description edits
		ACTION_PHP_EACH sphere_ids AS name=>ids BEGIN
			PRINT "processing %ids% sphere"
			ACTION_IF FILE_EXISTS "%MOD_FOLDER%/%path%/%ids%.txt" BEGIN
				ACTION_CLEAR_ARRAY spells_here
				ACTION_CLEAR_ARRAY spell_resrefs_here
				COPY_EXISTING - "%MOD_FOLDER%/%path%/%ids%.txt" nowhere
					READ_2DA_ENTRIES_NOW ids_data 0
					PATCH_IF ids_data>0 BEGIN
						SPRINT $nonempty_spheres("%ids%") ""
					END
					FOR (row=0;row<ids_data;++row) BEGIN
						READ_2DA_ENTRY_FORMER ids_data row 0 temp
						SPRINT $spells_here("%temp%") ""
					END
				ACTION_PHP_EACH spells_here AS spell=>discard BEGIN
					LAF RES_NUM_OF_SPELL_NAME INT_VAR silent=1 STR_VAR spell_name="CLERIC_%spell%" RET resref=spell_res END
					ACTION_IF FILE_EXISTS_IN_GAME "%resref%.spl" BEGIN
						ACTION_TO_UPPER resref
						OUTER_SPRINT $spell_resrefs_here("%resref%") ""
						ACTION_IF VARIABLE_IS_SET $spell_spheres("%resref%") BEGIN
							OUTER_SPRINT temp $spell_spheres("%resref%")
							OUTER_SPRINT $spell_spheres("%resref%") "%temp%, %name%"
						END ELSE BEGIN
							OUTER_SPRINT $spell_spheres("%resref%") "%name%"
						END
					END ELSE BEGIN
						ACTION_IF !FILE_EXISTS "%data_loc%/sphere_spells_missing.txt" BEGIN
							COPY ".../stratagems-inline/blank" "%data_loc%/sphere_spells_missing.txt"
						END
						APPEND_OUTER "%data_loc%/sphere_spells_missing.txt" "CLERIC_%spell%"
					END

				END
				ACTION_SORT_ARRAY_INDICES spell_resrefs_here LEXICOGRAPHICALLY 			
				LAF define_spell_list STR_VAR key="%ids%" list_name=EVAL"%sphere_name_%ids%%" spell_array=spell_resrefs_here END
			END ELSE BEGIN
				WARN "ui_spell_system_spheres: cannot find sphere %ids% at %MOD_FOLDER%/%path%"
			END
		END
		
		// read back in the lists of cleric and druid spells
		
		LAF get_spell_array STR_VAR list=cleric root=sppr RET_ARRAY cleric_array=this_array END
		LAF get_spell_array STR_VAR list=druid root=sppr RET_ARRAY druid_array=this_array END

		// go through the cleric/druid lists for missing spells

		OUTER_SPRINT nature_name $sphere_name("nature")
		OUTER_SPRINT all_name $sphere_name("all")
		OUTER_SPRINT divine_name $sphere_name("divine")

		ACTION_PHP_EACH cleric_array AS spell=>val BEGIN
		  ACTION_IF val && !VARIABLE_IS_SET $exclude_from_spheres("%spell%") && !RESOURCE_CONTAINS "hidespl.2da" "%spell%[ %TAB%]1" BEGIN	
			ACTION_IF !VARIABLE_IS_SET $spell_spheres("%spell%") BEGIN
				ACTION_IF $druid_array("%spell%")=1 BEGIN
					OUTER_SPRINT $spell_spheres("%spell%") "%all_name%"
					APPEND "m_dw_ssd.lua" "dwSpellList['all']['%spell%']=true%WNL%"
					OUTER_SPRINT $nonempty_spheres("all") ""
				END ELSE BEGIN
					OUTER_SPRINT $spell_spheres("%spell%") "%divine_name%"
					APPEND "m_dw_ssd.lua" "dwSpellList['divine']['%spell%']=true%WNL%"
					OUTER_SPRINT $nonempty_spheres("divine") ""
				END
			END
		  END
		END
		ACTION_PHP_EACH druid_array AS spell=>val BEGIN
		  ACTION_IF val && !VARIABLE_IS_SET $exclude_from_spheres("%spell%") && !RESOURCE_CONTAINS "hidespl.2da" "%spell%[ %TAB%]1" BEGIN	
			ACTION_IF !VARIABLE_IS_SET $spell_spheres("%spell%") BEGIN
				OUTER_SPRINT $spell_spheres("%spell%") "%nature_name%"
				APPEND "m_dw_ssd.lua" "dwSpellList['nature']['%spell%']=true%WNL%"
				OUTER_SPRINT $nonempty_spheres("nature") ""
			END
		  END
		
		END
		
		// audit empty spheres
		
		COPY ".../stratagems-inline/blank" "%data_loc_shared%/dw_empty_spheres.txt"
			SPRINT data ""
			PHP_EACH sphere_ids AS name=>ids BEGIN
				PATCH_IF !VARIABLE_IS_SET $nonempty_spheres("%ids%") BEGIN
					SPRINT data "%data%%ids%%WNL%"
				END
			END
			INSERT_BYTES 0x0 STRING_LENGTH "%data%"
			WRITE_ASCII 0x0 "%data%"

		// list the spells
		
		ACTION_PHP_EACH sphere_defaults AS class=>ids_list BEGIN
			ACTION_CLEAR_ARRAY default_name_array
			OUTER_PATCH "%ids_list% " BEGIN
				REPLACE_EVALUATE "\([^ ]+\) " BEGIN
					SPRINT ids "%MATCH1%"
					TO_LOWER ids
					PATCH_IF VARIABLE_IS_SET $nonempty_spheres("%ids%") BEGIN
						SPRINT name $sphere_name("%ids%")
						SPRINT $default_name_array("%name%") ""
					END
				END
				""
			END
			ACTION_SORT_ARRAY_INDICES default_name_array LEXICOGRAPHICALLY
			OUTER_SPRINT list ""
			ACTION_PHP_EACH default_name_array AS name=>discard BEGIN
				ACTION_IF "%list%" STR_EQ "" BEGIN
					OUTER_SPRINT list "%name%"
				END ELSE BEGIN
					OUTER_SPRINT list "%list%, %name%"
				END
			END
			OUTER_SPRINT $sphere_default_descriptions("%class%") "%list%"
		
		END

		// edit the descriptions
		WITH_TRA "%base_tra_path%/english/%base_tra%.tra" "%base_tra_path%/%LANGUAGE%/%base_tra%.tra" BEGIN
			OUTER_SPRINT sphere_base @900
		END
		ACTION_PHP_EACH spell_spheres AS spell=>text BEGIN
			COPY_EXISTING "%spell%.spl" override
				READ_LONG 0x50 desc_strref
				GET_STRREF desc_strref desc
				INNER_PATCH_SAVE desc "%desc%" BEGIN	
					REPLACE_TEXTUALLY "%sphere_base%.*" "%sphere_base% %text%"
				END
			BUT_ONLY
			ACTION_IF desc_strref>0 BEGIN
				STRING_SET_EVALUATE desc_strref "%desc%"
			END
		END

		// set the lists for core classes
		
		WITH_TRA "%base_tra_path%/english/%base_tra%.tra" "%base_tra_path%/%LANGUAGE%/%base_tra%.tra" BEGIN
			OUTER_SPRINT sphere_start @901
			ACTION_CLEAR_ARRAY swap_array
			OUTER_FOR (line=910;line<920;++line) BEGIN
				OUTER_SPRINT $swap_array("%line%") (AT line)
			END
			OUTER_FOR (line=950;line<960;++line) BEGIN
				OUTER_SPRINT $swap_array("%line%") (AT line)
			END
		END
		
		LAF adjust_priest_casting_description STR_VAR class=CLERIC END
		LAF adjust_priest_casting_description STR_VAR class=DRUID END

		LAF set_spell_list STR_VAR class=paladin allow_priest="%sphere_defaults_paladin%" END
		LAF adjust_priest_casting_description STR_VAR class=PALADIN END
		LAF set_spell_list STR_VAR kit=BLACKGUARD allow_priest="%sphere_defaults_blackguard%" END
		LAF adjust_priest_casting_description STR_VAR class=BLACKGUARD END
		
		LAF set_spell_list STR_VAR class=ranger allow_priest="%sphere_defaults_ranger%" END
		LAF adjust_priest_casting_description STR_VAR class=RANGER END
		
		LAF set_spell_list STR_VAR class=shaman allow_learn="%sphere_defaults_shaman%" END
		LAF adjust_priest_casting_description STR_VAR class=SHAMAN END
		
		ACTION_FOR_EACH class IN druid fighter_druid cleric_ranger BEGIN
			LAF set_spell_list STR_VAR class allow_priest="%sphere_defaults_druid%" END	
		END
		ACTION_FOR_EACH class IN cleric fighter_cleric cleric_mage fighter_mage_cleric cleric_thief BEGIN
			LAF set_spell_list STR_VAR class allow_priest="%sphere_defaults_cleric%" END	
		END
		

	END
END

DEFINE_ACTION_FUNCTION get_sphere_data STR_VAR path="sphere" list="sphere_list.2da" tra="" tra_path="" RET_ARRAY sphere_ids sphere_name sphere_defaults BEGIN

	ACTION_CLEAR_ARRAY sphere_class_maps
	ACTION_CLEAR_ARRAY sphere_defaults
	ACTION_DEFINE_ASSOCIATIVE_ARRAY sphere_class_maps BEGIN
		B=>blackguard
		C=>cleric
		D=>druid
		S=>shaman
		P=>paladin
		R=>ranger
	END
	ACTION_PHP_EACH sphere_class_maps AS discard=>class BEGIN
		OUTER_SPRINT $sphere_defaults("%class%") ""
	END

	WITH_TRA "%tra_path%/english/%tra%.tra" "%tra_path%/%LANGUAGE%/%tra%.tra" BEGIN

	
		ACTION_CLEAR_ARRAY sphere_ids
		ACTION_CLEAR_ARRAY sphere_name
		COPY - "%MOD_FOLDER%/%path%/%list%" nowhere
			READ_2DA_ENTRIES_NOW sphere_entries 3
			FOR (row=0;row<sphere_entries;++row) BEGIN
				READ_2DA_ENTRY_FORMER sphere_entries row 0 tra_ref
				READ_2DA_ENTRY_FORMER sphere_entries row 1 ids
				READ_2DA_ENTRY_FORMER sphere_entries row 2 defaults
				PATCH_IF IS_AN_INT tra_ref BEGIN
					TO_LOWER ids
					SPRINT name (AT tra_ref)
					SPRINT $sphere_ids("%name%") "%ids%"
					SPRINT $sphere_name("%ids%") "%name%"
					INNER_PATCH "%defaults%" BEGIN
						REPLACE_EVALUATE "\([A-Z]\)" BEGIN
							SPRINT class $sphere_class_maps("%MATCH1%")
								SPRINT temp $sphere_defaults("%class%")
								SPRINT $sphere_defaults("%class%") "%temp% %ids%"
						END
						""
					END
				END
			END
		BUT_ONLY
	
	END
	ACTION_IF !VARIABLE_IS_SET data_loc_shared BEGIN
		OUTER_SPRINT data_loc_shared "weidu_external/data/dw_shared"
	END
	// log the defaults
	COPY ".../stratagems-inline/blank" "%data_loc_shared%/dw_sphere_defaults.ini"
		SPRINT data ""
		PHP_EACH sphere_defaults AS class=>defaults BEGIN
			SPRINT data ~%data%%class%="%defaults%"%WNL%~
		END
		INSERT_BYTES 0x0 STRING_LENGTH "%data%"
		WRITE_ASCII 0x0 "%data%"
	// log the actual spheres (with names)
	COPY ".../stratagems-inline/blank" "%data_loc_shared%/dw_sphere_list.ini" // ini format because sphere names might have spaces
		SPRINT data ""
		PHP_EACH sphere_name AS ids=>name BEGIN
			SPRINT data ~%data%%ids%="%name%"%WNL%~ 
		END
		INSERT_BYTES 0x0 STRING_LENGTH "%data%"
		WRITE_ASCII 0x0 "%data%"
	
	
END

DEFINE_ACTION_FUNCTION adjust_priest_casting_description STR_VAR class="" BEGIN

	COPY_EXISTING - "clastext.2da" nowhere
		COUNT_2DA_COLS colcount
		READ_2DA_ENTRIES_NOW clastext_data colcount
		FOR (row=0;row<clastext_data;++row) BEGIN
			READ_2DA_ENTRY_FORMER clastext_data row 0 class_here
			PATCH_IF "%class%" STR_EQ "%class_here%" BEGIN
				READ_2DA_ENTRY_FORMER clastext_data row 4 strref
				row=clastext_data
			END
		END
	ACTION_TO_LOWER class
	OUTER_SPRINT s_new $sphere_default_descriptions("%class%")
	OUTER_SPRINT s_new "%sphere_start%%s_new%."
	ACTION_GET_STRREF strref string
	OUTER_PATCH_SAVE string "%string%" BEGIN
		PHP_EACH swap_array AS ind=>string BEGIN
			REPLACE_TEXTUALLY "^\([^a-z]*\)%string%.*" "\1%s_new%"
		END
	END
	STRING_SET_EVALUATE strref "%string%"



END


DEFINE_ACTION_FUNCTION assign_spheres
	INT_VAR update_scroll_usability=1
	STR_VAR kit=""
			kit_clastext=""
			spheres=""
			default=""
			add=""
			subtract=""
			block=""
			base_tra=sfo_lua
			base_tra_path="DEFAULT"
BEGIN
	ACTION_IF !VARIABLE_IS_SET marker_loc BEGIN
		OUTER_SPRINT marker_loc "weidu_external/markers"
	END
	ACTION_IF !VARIABLE_IS_SET lua_loc BEGIN
		OUTER_SPRINT lua_loc lua
	END
	ACTION_IF "%base_tra_path%" STR_EQ "DEFAULT" BEGIN
		OUTER_SPRINT base_tra_path "%MOD_FOLDER%/%lua_loc%/lang"
	END
	ACTION_IF !VARIABLE_IS_SET data_loc BEGIN
		OUTER_SPRINT data_loc "weidu_external/data/%MOD_FOLDER%"
	END
	ACTION_IF !VARIABLE_IS_SET data_loc_shared BEGIN
		OUTER_SPRINT data_loc_shared "weidu_external/data/dw_shared"
	END
  	ACTION_IF !VARIABLE_IS_SET marker_loc BEGIN
		OUTER_SPRINT marker_loc "weidu_external/markers"
	END

	ACTION_IF !FILE_EXISTS "%marker_loc%/dw#spheres_installed.mrk" BEGIN
		FAIL "assign_spheres: spheres must be installed first."
	END
	// get data
	LAF load_spell_lists RET_ARRAY spell_list_names=spell_lists END

	COPY - "%data_loc_shared%/dw_sphere_defaults.ini" nowhere
		REPLACE_EVALUATE ~^\([^=%WNL%%LNL%%MNL%]+\) *= *"\([^"]*\)"~ BEGIN
			SPRINT class "%MATCH1%"
			TO_LOWER class
			SPRINT $sphere_defaults("%class%") "%MATCH2%"
		END
		""
	COPY - "%data_loc_shared%/dw_sphere_list.ini" nowhere
		REPLACE_EVALUATE ~^\([^=%WNL%%LNL%%MNL%]+\) *= *"\([^"]*\)"~ BEGIN
			SPRINT ids "%MATCH1%"
			TO_LOWER ids
			SPRINT $sphere_names("%ids%") "%MATCH2%"
		END
		""
	ACTION_IF "%kit_clastext%" STRING_EQUAL "" BEGIN
		OUTER_SPRINT kit_clastext "%kit%"
	END
	COPY - "%data_loc_shared%/dw_empty_spheres.txt" nowhere
		COUNT_2DA_ROWS 1 rowcount
		FOR (row=0;row<rowcount;++row) BEGIN
			READ_2DA_ENTRY row 0 1 entry
			TO_LOWER entry
			SPRINT $empty_spheres("%entry%") ""
		END
	// get some kit data
	
	COPY_EXISTING - "kitlist.2da" nowhere
	COUNT_2DA_COLS colcount
	READ_2DA_ENTRIES_NOW kitlist_data colcount
	FOR (row=0;row<kitlist_data;++row) BEGIN
		READ_2DA_ENTRY_FORMER kitlist_data row 1 name
		PATCH_IF "%name%" STR_EQ "%kit%" BEGIN
			READ_2DA_ENTRY_FORMER kitlist_data row 4 desc_strref
			READ_2DA_ENTRY_FORMER kitlist_data row 8 class_number
			LOOKUP_IDS_SYMBOL_OF_INT parent_class class class_number
			TO_LOWER parent_class
			row=kitlist_data
		END
	END
	// get strings 
	WITH_TRA "%base_tra_path%/english/%base_tra%.tra" "%base_tra_path%/%LANGUAGE%/%base_tra%.tra" BEGIN
		OUTER_SPRINT sphere_intro_string @901
		OUTER_SPRINT advantage_string @120
	END
	// go to the default default (so to speak)
	ACTION_IF "%spheres%" STR_EQ "" && "%default%" STR_EQ "" BEGIN
		OUTER_SPRINT default "%parent_class%"
	END
	// make the sphere list
	ACTION_IF "%default%" STRING_COMPARE "" BEGIN
		ACTION_TO_LOWER default
		ACTION_IF VARIABLE_IS_SET $sphere_defaults("%default%") BEGIN
			OUTER_SPRINT spheres $sphere_defaults("%default%")
		END ELSE BEGIN
			WARN "unrecognised default %default% in assign_spheres function" 
		END
	END
	OUTER_PATCH "%subtract% " BEGIN
		REPLACE_EVALUATE "\([^ ]+\) " BEGIN
			SPRINT subtract_this "%MATCH1%"
			INNER_PATCH_SAVE spheres "%spheres%" BEGIN
				REPLACE_TEXTUALLY "%subtract_this%" ""
			END
		END
		""
	END
	OUTER_SPRINT spheres "%spheres% %add%"
	
	// actually set the spheres
	ACTION_IF "%parent_class%" STR_EQ "shaman" BEGIN
		LAF set_spell_list INT_VAR update_scroll_usability STR_VAR kit kit_clastext allow_learn="%spheres%" block_learn="%block%" END	
	END ELSE BEGIN
		LAF set_spell_list INT_VAR update_scroll_usability STR_VAR kit kit_clastext allow_priest="%spheres%" block_priest="%block%" END
	END
	// generate the alphabetical list of spheres
	ACTION_CLEAR_ARRAY sphere_list 
	OUTER_PATCH "%spheres% " BEGIN
		REPLACE_EVALUATE "\([^ ]+\) " BEGIN
			SPRINT ids "%MATCH1%"
			TO_LOWER ids
			PATCH_IF VARIABLE_IS_SET $sphere_names("%ids%") && !VARIABLE_IS_SET $empty_spheres("%ids%") BEGIN
				SPRINT name $sphere_names("%ids%")
				SPRINT $sphere_list("%name%") ""
			END
		END
		""
	END
	ACTION_SORT_ARRAY_INDICES sphere_list LEXICOGRAPHICALLY
	// make a formatted list from it
	OUTER_SPRINT list ""
	ACTION_PHP_EACH sphere_list AS entry=>null BEGIN
		ACTION_IF "%list%" STRING_EQUAL "" BEGIN
			OUTER_SPRINT list "%entry%"
		END ELSE BEGIN
			OUTER_SPRINT list "%list%, %entry%"
		END
	END
	// actually substitute the description 
		COPY_EXISTING - "kitlist.2da" nowhere
			COUNT_2DA_COLS colcount
			READ_2DA_ENTRIES_NOW kitlist_data colcount
			FOR (row=0;row<kitlist_data;++row) BEGIN
				READ_2DA_ENTRY_FORMER kitlist_data row 1 name
				PATCH_IF "%name%" STR_EQ "%kit%" BEGIN
					READ_2DA_ENTRY_FORMER kitlist_data row 4 desc_strref
					row=kitlist_data
				END
			END
		ACTION_GET_STRREF desc_strref desc
		OUTER_PATCH_SAVE desc "%desc%" BEGIN
			PATCH_IF INDEX_BUFFER ("SPHERE_PLACEHOLDER")>=0 BEGIN
				REPLACE_TEXTUALLY "SPHERE_PLACEHOLDER" "%sphere_intro_string%%list%."
			END ELSE BEGIN
				REPLACE_TEXTUALLY 
					"^\(%advantage_string%[%WNL%%LNL%%MNL%]\)\([^a-z0-9+]+\)" 
					"\1\2%sphere_intro_string%%list%.%WNL%\2"
					
			END
		END
		STRING_SET_EVALUATE desc_strref "%desc%"

END	
