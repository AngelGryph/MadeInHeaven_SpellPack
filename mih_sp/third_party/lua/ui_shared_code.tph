//////////////////////////////////////////////////////////////////////////////////////////////////////////
////	Add functionality to overwrite character colors
//////////////////////////////////////////////////////////////////////////////////////////////////////////

DEFINE_ACTION_FUNCTION shared_color_changes BEGIN

	// install shared functions
	
	LAF UI_install_function INT_VAR inline=1 STR_VAR new_function_path=".../stratagems-inline/update_colors.lua" lua_file="m_dw_shr" search_string=dwUpdateColors END

	// edit ui.menu to incorporate the colors
	
	COPY_EXISTING "ui.menu" override
		LPF UI_alter_object STR_VAR object=CHARACTER_COLOR object_type=menu patch=add_color_update END
END

DEFINE_PATCH_FUNCTION add_color_update BEGIN
	PATCH_IF INDEX_BUFFER ("dwUpdateColors")<0 BEGIN 
		REPLACE_TEXTUALLY ~^\([%TAB% ]+\)Infinity_UpdateLuaStats()~ ~\1Infinity_UpdateLuaStats()%WNL%\1dwUpdateColors()~
	END
END

<<<<<<<<.../stratagems-inline/update_colors.lua


function dwUpdateColors()

	 if currentChargenSubrace and currentChargenRace then
	 		subcol=subraceList(dwRaces[currentChargenRace].id)[currentChargenSubrace].color
			if subcol.hair~=-1 then
				Infinity_SetHairColor(subcol.hair)
			end
			if subcol.skin~=-1 then
				Infinity_SetSkinColor(subcol.skin)
			end
			if subcol.major~=-1 then
				Infinity_SetMajorColor(subcol.major)
			end
			if subcol.minor~=-1 then
				Infinity_SetMinorColor(subcol.minor)
			end
	end


	 -- see if portrait has set colors (later, b/c higher priority)
	 if chargen.portrait and dwPortraitList and dwPortraitColorsActivated then
		if dwPortraitList[chargen.portrait] then
			portrait_data=dwPortraitList[chargen.portrait]
			Infinity_SetHairColor(portrait_data.hair)		
			Infinity_SetSkinColor(portrait_data.skin)		
			Infinity_SetMajorColor(portrait_data.major)		
			Infinity_SetMinorColor(portrait_data.minor)		
		end
	 end
	 

end

>>>>>>>>

//////////////////////////////////////////////////////////////////////////////////////////////////////////
////	Tell whether we're levelling, dualling or in chargen
//////////////////////////////////////////////////////////////////////////////////////////////////////////


DEFINE_ACTION_FUNCTION detect_chargen_status BEGIN

	ACTION_IF !RESOURCE_CONTAINS "ui.menu" "dwIsLevelling=true" BEGIN
		COPY_EXISTING "ui.menu" override
			LPF UI_alter_object STR_VAR object=CHARGEN_GENDER object_type=menu patch=label_chargen END 
			LPF UI_alter_object STR_VAR object=CHARGEN_DUALCLASS object_type=menu patch=dual_on_done END 
			LPF UI_alter_object STR_VAR object=LEVELUP_PROFICIENCIES object_type=menu patch=levelling_on_done END
			REPLACE_TEXTUALLY EXACT_MATCH ~characterScreen:OnLevelUpButtonClick()~ ~dwIsChargen=false;dwIsLevelling=true;dwIsDualClassing=false;characterScreen:OnLevelUpButtonClick()~
			REPLACE_TEXTUALLY EXACT_MATCH ~characterScreen:OnDualClassButtonClick()~ ~dwIsChargen=false;dwIsLevelling=false;dwIsDualClassing=true;characterScreen:OnDualClassButtonClick()~
			REPLACE_TEXTUALLY EXACT_MATCH ~createCharScreen:AcceptCharacter~ ~dwIsChargen=false;createCharScreen:AcceptCharacter~
		BUT_ONLY
	END
END

DEFINE_PATCH_FUNCTION label_chargen BEGIN
	REPLACE_TEXTUALLY ~onOpen\([^"]\)*"~ ~onOpen\1"%WNL%dwIsChargen=true;dwIsLevelling=false;dwIsDualClassing=false%WNL%~
END

DEFINE_PATCH_FUNCTION dual_on_done BEGIN
	REPLACE_TEXTUALLY ~createCharScreen:OnDoneButtonClick()~ ~dwIsDualClassing=false;createCharScreen:OnDoneButtonClick()~
END

DEFINE_PATCH_FUNCTION levelling_on_done BEGIN
	REPLACE_TEXTUALLY ~createCharScreen:OnDoneButtonClick()~ ~dwIsLevelling=false;createCharScreen:OnDoneButtonClick()~
END


//////////////////////////////////////////////////////////////////////////////////////////////////////////
// suppress certain rows on the Abilities list in the character screen
// (currently used only by no_int_max_spells, but we may as well aim for generality)
//////////////////////////////////////////////////////////////////////////////////////////////////////////


DEFINE_ACTION_FUNCTION hide_displayed_ability_setup BEGIN



	// setup the lua pages
	
	COPY ".../stratagems-inline/hide_ability_functions.lua" "override/m_dw_haf.lua"
	COPY ".../stratagems-inline/hide_ability_data.lua" "override/m_dw_had.lua"

	// make menu edit
	
	ACTION_IF is_iwd BEGIN
		OUTER_SPRINT function buildCharacterDetails
	END ELSE BEGIN
		OUTER_SPRINT function updateAttrTable
	END
	COPY_EXISTING "ui.menu" override
		LPF UI_alter_function STR_VAR function patch=add_dwHideAbility END
	BUT_ONLY

END

DEFINE_PATCH_FUNCTION add_dwHideAbility BEGIN

	start = INDEX_BUFFER (EXACT_MATCH "for k, v in ipairs(characters[currentID].proficiencies.ability)")
	end = INDEX_BUFFER ("end" start) + 3
	READ_ASCII start data_old (end - start)
	INNER_PATCH_SAVE data_new "%data_old%" BEGIN
		PATCH_IF is_iwd BEGIN
			REPLACE_TEXTUALLY EXACT_MATCH "addCharacterDetail(nil,nil,v.current)" "if not dwHideAbility(v.current) then %WNL% addCharacterDetail(nil,nil,v.current) %WNL%end"
		END ELSE BEGIN
			REPLACE_TEXTUALLY "--.*" ""
			REPLACE_TEXTUALLY "\(table\.insert.*\)" "if not dwHideAbility(v.current) then %WNL% \1 %WNL%end"
		END
	END
	DELETE_BYTES start (STRING_LENGTH "%data_old%")
	INSERT_BYTES start (STRING_LENGTH "%data_new%")
	WRITE_ASCIIE start "%data_new%"



END

DEFINE_ACTION_FUNCTION hide_this_displayed_ability STR_VAR string="" BEGIN
	ACTION_IF !FILE_EXISTS_IN_GAME "m_dw_haf.lua" BEGIN
		LAF hide_displayed_ability_setup END
	END
	OUTER_WHILE "%string%" STRING_COMPARE "" BEGIN
		LAF return_first_entry STR_VAR list="%string%" RET entry string=list END
		COPY_EXISTING "enginest.2da" "%workspace%"
			REPLACE_EVALUATE "%entry%[ %TAB%]+\([0-9]+\)" BEGIN
				strref="%MATCH1%"
			END
			""
		BUT_ONLY
		APPEND "m_dw_had.lua" "dwHiddenAbilityText[%strref%]=true"
	END
	


END


<<<<<<<< .../stratagems-inline/hide_ability_functions.lua
function dwHideAbility(text)

	value=nil
	for k,_ in pairs(dwHiddenAbilityText) do
		if string.find(text,Infinity_FetchString(k)) then
			value=true
		end
	end
	
	return value

end
>>>>>>>>

<<<<<<<< .../stratagems-inline/hide_ability_data.lua
dwHiddenAbilityText={}
>>>>>>>>

