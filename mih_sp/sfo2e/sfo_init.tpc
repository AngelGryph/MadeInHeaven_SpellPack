//////////////////////////////////////////////
///  LIVE CODE!
//////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////
// include all libraries (extremely fast so we may as well do it for every
// component, especially as we overwrite a couple of WEIDU functions)
//////////////////////////////////////////////////////////////////////////

ACTION_TIME sfo_setup_libraries BEGIN
	ACTION_BASH_FOR "%MOD_FOLDER%/%sfo_library_path%" ".*\.tph" BEGIN
		INCLUDE "%BASH_FOR_FILESPEC%"
	END
END

//////////////////////////////////////////
// set SFO directories, variables etc
//////////////////////////////////////////

ACTION_TIME sfo_setup_variables BEGIN
	LAM sfo_setup
END

////////////////////////////////////////////////////////////////////////////
// handle tra files (this is immutable so we only do it once)
////////////////////////////////////////////////////////////////////////////

ACTION_TIME sfo_setup_charsets BEGIN
	LAF sfo_handle_charsets 
		INT_VAR sfo_from_utf8
		STR_VAR sfo_tra_path
				sfo_iconv_path
		RET sfo_tra_loc
	END
END

////////////////////////////////////////////////////////////////////////////
// load ini file
////////////////////////////////////////////////////////////////////////////

ACTION_TIME sfo_setup_ini BEGIN
	ACTION_IF !VARIABLE_IS_SET SFO_ini_loaded BEGIN
		OUTER_SET SFO_ini_loaded=1
		ACTION_IF !VARIABLE_IS_SET SFO_ini_file BEGIN
			OUTER_SPRINT SFO_ini_file "%MOD_FOLDER%.ini"
		END
		ACTION_IF !VARIABLE_IS_SET SFO_ini_file_location BEGIN
			OUTER_SPRINT SFO_ini_file_location "%MOD_FOLDER%"
		END
		ACTION_IF FILE_EXISTS "%SFO_ini_file_location%/%SFO_ini_file%" BEGIN
			LAF ini_read INT_VAR flat=1 STR_VAR file="%SFO_ini_file%" path="%SFO_ini_file_location%" RET_ARRAY SFO_reserved_ini_hash=array END
			LAF ini_read INT_VAR flat=0 STR_VAR file="%SFO_ini_file%" path="%SFO_ini_file_location%" RET_ARRAY SFO_reserved_ini_hash_2d=array END
		END
	END	
END



//////////////////////////////////////////////////////////////////////////////
// handle crossplatform (this actually only happens once)
//////////////////////////////////////////////////////////////////////////////

ACTION_TIME sfo_setup_crossplatform BEGIN
	LAM sfo_crossplatform
END

//////////////////////////////////////////////////////////////////////////////
// do sfo's fixes (to spell.ids, dir.ids, etc)
//////////////////////////////////////////////////////////////////////////////

ACTION_TIME sfo_setup_fix BEGIN
	LAF sfo_fix END
END


//////////////////////////////////////////////////////////////////////////////
// initialize struct/vtable if not already done (this actually only happens once)
//////////////////////////////////////////////////////////////////////////////

ACTION_TIME sfo_setup_structs BEGIN
	LAM struct_initialize
	LAM vtable_initialize
END

////////////////////////////////////////////////////////////////////////////
// load data (this isn't immutable, safest to do it for every component)
// at the moment we're only loading spell data and NPC dvs
////////////////////////////////////////////////////////////////////////////

ACTION_TIME sfo_setup_data BEGIN
	/// spells and scrolls
	LAM data_spell_resrefs
	LAM data_joinable_dvs
END

