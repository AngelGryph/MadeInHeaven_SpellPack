DEFINE_ACTION_MACRO __handle_projectile
BEGIN
  ACTION_IF "%projectile%" STRING_COMPARE "*"
  BEGIN
    ADD_PROJECTILE "%MOD_FOLDER%/%component_loc%/%pack%/projectiles/%projectile%.pro"
    OUTER_SET pronum = IDS_OF_SYMBOL("projectl" "%projectile%") + 1
    
    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      patch_ability_inline'2=>~projectile=>"%pronum%"~
    END

    ACTION_IF FILE_EXISTS "%MOD_FOLDER%/%component_loc%/%pack%/graphics/%projectile%.bam"
    BEGIN
      LAUNCH_ACTION_FUNCTION install
        STR_VAR
        file	= "%projectile%.bam"
        location	= "%pack%/graphics"
      END
    END

    ACTION_IF FILE_EXISTS "%MOD_FOLDER%/%component_loc%/%pack%/graphics/%projectile%.vvc"
    BEGIN
      LAUNCH_ACTION_FUNCTION install
        STR_VAR
        file	= "%projectile%.vvc"
        location	= "%pack%/graphics"
      END
    END
  END
END


DEFINE_ACTION_MACRO __handle_half_damage
BEGIN
  ACTION_MATCH "%half_damage%"
  WITH
  "dl"  // Level-based dice num
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and save_vs_spells" dicenum=>"ability_true_level" mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not save_vs_spells~
    END
  END

  "dd"	// Double dicenum.
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and save_vs_spells" dicenum=>"dicenum * 2" mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not save_vs_spells~
    END
  END

  "ff"	// Frost Fingers: Double param1 and set dicesize to 3.
  BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      patch_effect_inline'2=>~match=>"%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and save_vs_spells" parameter1=>"parameter1 * 2" dicesize=>3 mode=>256~
      delete_effect=>~%enhanced_edition% and %use_ee_half_damage% and opcode = 12 and not save_vs_spells~
    END
  END
  DEFAULT
  END
END


DEFINE_ACTION_MACRO __handle_cd_immunity
BEGIN
  ACTION_IF "%cd_immunity_csv%" STRING_COMPARE "*"
  BEGIN
    OUTER_PATCH_SAVE cd_immunity_list "%cd_immunity_csv%"
    BEGIN
      REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH "," " "
    END

    ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
    BEGIN
      cd_immunity=>"%cd_immunity_list%"
    END
  END
END


DEFINE_ACTION_FUNCTION install_spell_pack
  STR_VAR
  pack	= ""
BEGIN
  LAUNCH_ACTION_FUNCTION check_ini
    STR_VAR
    ini		= "use_ee_half_damage"
    RET
    use_ee_half_damage	= value
  END


  // Run definalise_hidespl if needed

  ACTION_IF FILE_EXISTS_IN_GAME "hidespl.2da"
  BEGIN
    LAUNCH_ACTION_FUNCTION definalise_hidespl END
  END


  // Copy anything that just needs copying

  COPY_LARGE "%MOD_FOLDER%/%component_loc%/%pack%/_copy" "override"


  // Simple spell items, cre paws & stuff

  COPY - "%MOD_FOLDER%/%component_loc%/%pack%/tables/items.2da" "nowhere"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_items cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_items i 0 resref
      READ_2DA_ENTRY_FORMER __MH_RESERVED_items i 1 name_tra

      INNER_ACTION
      BEGIN
        ACTION_CLEAR_ARRAY patch_data

	ACTION_IF IS_AN_INT name_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_both_names=>"%name_tra%"
	  END
	END

        LAUNCH_ACTION_FUNCTION install_item
	  STR_VAR
	  item		= "%resref%"
	  location	= "%pack%/items"
	  edits		= "patch_data"
	END
      END
    END
	

  // Simple summons for single spells

  COPY - "%MOD_FOLDER%/%component_loc%/%pack%/tables/summons.2da" "nowhere"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_items cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_items i 0 resref
      READ_2DA_ENTRY_FORMER __MH_RESERVED_items i 1 name_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_items i 2 vvc

      INNER_ACTION
      BEGIN
        LAUNCH_ACTION_FUNCTION install_creature
	  STR_VAR
	  creature	= "%resref%"
	  location	= "%pack%/actors"
	  editstring	= "say_both_names=>%name_tra%"
	END
	
	LAUNCH_ACTION_FUNCTION make_effect
	  STR_VAR
	  effect	= "%resref%"
	  editstring	= ~opcode=>67 timing=>1 parameter1=>5 resource=>"%resref%" vvc=>"%vvc%"~
	END
      END
    END


  // Simple effects

  COPY - "%MOD_FOLDER%/%component_loc%/%pack%/tables/effects.2da" "nowhere"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_effects cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 0 resref
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 1 opcode
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 2 parameter1
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 3 parameter2
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 4 dicenum
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 5 dicesize
      READ_2DA_ENTRY_FORMER __MH_RESERVED_effects i 6 resource

      INNER_ACTION
      BEGIN
        LAUNCH_ACTION_FUNCTION make_effect
          STR_VAR
	  effect	= "%resref%"
	  editstring	= ~opcode=>%opcode% timing=>1 parameter1=>%parameter1% parameter2=>%parameter2% dicenum=>%dicenum% dicesize=>%dicesize% resource=>"{literal:%resource%}"~
        END
      END
    END


  // Process secondary spells

  COPY - "%MOD_FOLDER%/%component_loc%/%pack%/tables/secondary.2da" "nowhere"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_secondary cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_secondary i 0 filename
      READ_2DA_ENTRY_FORMER __MH_RESERVED_secondary i 1 projectile

      INNER_ACTION
      BEGIN
        ACTION_CLEAR_ARRAY patch_data
	

        // Check/handle projectile

	LAUNCH_ACTION_MACRO __handle_projectile


        // Install the actual spell file.

	LAUNCH_ACTION_FUNCTION install_spell
	  STR_VAR
	  spell		= "%filename%"
	  location	= "%pack%/spells"
	  edits		= "patch_data"
	END
      END
    END


  // Process master table

  COPY - "%MOD_FOLDER%/%component_loc%/%pack%/tables/master.2da" "nowhere"
    COUNT_2DA_COLS cols
    COUNT_2DA_ROWS cols rows
    READ_2DA_ENTRIES_NOW __MH_RESERVED_master cols

    FOR (SET i = 1; i < rows; ++i)
    BEGIN
      READ_2DA_ENTRY_FORMER __MH_RESERVED_master i 0 idsname
      READ_2DA_ENTRY_FORMER __MH_RESERVED_master i 1 name_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_master i 2 desc_tra
      READ_2DA_ENTRY_FORMER __MH_RESERVED_master i 3 idsnum
      READ_2DA_ENTRY_FORMER __MH_RESERVED_master i 4 scrollname
      READ_2DA_ENTRY_FORMER __MH_RESERVED_master i 5 half_damage
      READ_2DA_ENTRY_FORMER __MH_RESERVED_master i 6 projectile
      READ_2DA_ENTRY_FORMER __MH_RESERVED_master i 7 cd_immunity_csv
      
      INNER_ACTION
      BEGIN
        OUTER_TEXT_SPRINT filename "%idsname%"
	ACTION_TO_LOWER filename


        // If we have a preferred idsnum, try to snatch it.

	ACTION_IF IS_AN_INT idsnum
	BEGIN
	  APPEND "spell.ids" "%idsnum% %idsname%" UNLESS "^%idsnum%"
	  CLEAR_IDS_MAP
	END

        LAUNCH_ACTION_FUNCTION add_spell_to_ids
          STR_VAR
          idsname
	  filename
	  file_loc	= "%MOD_FOLDER%/%component_loc%/%pack%/spells"
          RET
          newname
        END


        // We know the new resource now, patch stuff in.

        ACTION_CLEAR_ARRAY patch_data
	ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	BEGIN
	  icon=>"%newname%c"
	  patch_ability_inline'1=>~ability_icon=>"%newname%b"~
	  patch_effect_inline'1=>~match=>"resource = ##SELF##" resource=>"%newname%"~
	END


        // Add name/description strings if we have them.

	ACTION_IF IS_AN_INT name_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_name=>"%name_tra%"
	  END
	END

	ACTION_IF IS_AN_INT desc_tra
	BEGIN
	  ACTION_DEFINE_ASSOCIATIVE_ARRAY patch_data
	  BEGIN
	    say_description=>"%desc_tra%"
	  END
	END


        // Check/handle EE half damage

	LAUNCH_ACTION_MACRO __handle_half_damage


        // Check/handle projectile

	LAUNCH_ACTION_MACRO __handle_projectile


	// Check/handle immunities

	LAUNCH_ACTION_MACRO __handle_cd_immunity


	// Look for any icon files we have that need installing.

	ACTION_FOR_EACH suffix IN "a" "b" "c"
	BEGIN
	  ACTION_IF NOT FILE_EXISTS_IN_GAME "%newname%%suffix%.bam" AND
	   FILE_EXISTS "%MOD_FOLDER%/%component_loc%/%pack%/graphics/%idsname%_%suffix%.bam"
	  BEGIN
	    COPY_LARGE "%MOD_FOLDER%/%component_loc%/%pack%/graphics/%idsname%_%suffix%.bam" "override/%newname%%suffix%.bam"
	  END
	END


        // Install and patch the actual spell file.

	LAUNCH_ACTION_FUNCTION install_spell
	  STR_VAR
	  spell		= "%filename%"
	  idsname
	  location	= "%pack%/spells"
	  edits		= "patch_data"
	END


	// Create a scroll if one is requested.

	ACTION_IF "%scrollname%" STRING_COMPARE "*"
	BEGIN
          LAUNCH_ACTION_FUNCTION make_scroll_of_spell
            STR_VAR
            resref		= "%newname%"
            scrollname
          END
	END
      END
    END
END	// install_spells


