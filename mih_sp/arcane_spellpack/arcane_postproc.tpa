DEFINE_ACTION_FUNCTION arcane_postproc
BEGIN
  // Create Spell Matrix innates

  MAKE_PATCH
    say_name=>26
    icon=>"%WIZARD_SPELL_MATRIX%c"
    patch_ability_inline=>~ability_icon=>"%WIZARD_SPELL_MATRIX%b"~
    patch_effect_inline'1=>~match=>"opcode = 258" resource=>"%WIZARD_SPELL_MATRIX%"~
    patch_effect_inline'2=>~match=>"opcode = 172" resource=>"%WIZARD_SPELL_MATRIX%d"~
  END

  LAUNCH_ACTION_FUNCTION clone_spell
    STR_VAR
    spell	= "spwi420d=>%WIZARD_SPELL_MATRIX%d"
    edits	= "patch_data"
  END

  ACTION_IF enhanced_edition
  BEGIN
    MAKE_PATCH
      say_name=>26
      icon=>"%WIZARD_SPELL_MATRIX%c"
      patch_ability_inline=>~ability_icon=>"%WIZARD_SPELL_MATRIX%b"~
      patch_effect_inline'1=>~match=>"opcode = 260" resource=>"%WIZARD_SPELL_MATRIX%"~
      patch_effect_inline'2=>~match=>"opcode = 172" resource=>"%WIZARD_SPELL_MATRIX%p"~
    END

    LAUNCH_ACTION_FUNCTION clone_spell
      STR_VAR
      spell	= "spwi420p=>%WIZARD_SPELL_MATRIX%p"
      edits	= "patch_data"
    END

    OUTER_SPRINT spell_matrix_title @26
    OUTER_SPRINT add_spell_matrix_label @62
    OUTER_SET sequencer_tip_strref = is_bg2 ? 60420 : 24616

    COPY_EXISTING "l_%EE_LANGUAGE%.lua" "override"
      REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH
        ~uiStrings = {~
        ~uiStrings = {%WNL%%TAB%SPELL_MATRIX_TITLE = "%spell_matrix_title%",%WNL%%TAB%ADD_SPELLS_MATRIX_LABEL = "%add_spell_matrix_label%",~

    COPY_EXISTING "bgee.lua" "override"
      REPLACE_TEXTUALLY CASE_INSENSITIVE EXACT_MATCH
        ~mageBookStrings = {~
        ~mageBookStrings = {%WNL%%TAB%%WIZARD_SPELL_MATRIX% = {tip = %sequencer_tip_strref%, title = 'SPELL_MATRIX_TITLE', action = "ADD_SPELLS_MATRIX_LABEL"},~
  END


  // Add save vs. breath to Gust of Wind effects
  //
  // Note to self: Consider extending simple effects table (again) if more
  // spells start needing this.

  MAKE_PATCH
    save_vs_breath=>1
    resist_dispel=>2
  END

  LAUNCH_ACTION_FUNCTION edit_effect
    STR_VAR
    effect	= "mh#gusta mh#gustb mh#gustc"
    edits	= "patch_data"
  END


  // Prevent stacking of arcane/divine versions of
  // certain spells.
  //
  // Externalized in shared to keep it the same for both.


  LAUNCH_ACTION_FUNCTION run
    STR_VAR
    file	= "mutual_excludes"
    locbase	= "shared/spells"
  END


  // Handle spells that need to repel/disperse swarms.
  //
  // Externalized in shared to keep it the same for both.

  LAUNCH_ACTION_FUNCTION run
    STR_VAR
    file	= "repel_insects"
    locbase	= "shared/spells"
  END


  // Apply CamDawg's elven sleep/charm resistance to Slumber and Mass Charm.
  //
  // TODO: Get this properly into SFO?

  COPY_EXISTING "%WIZARD_SLUMBER%.spl" "override"
                "%WIZARD_MASS_CHARM%.spl" "override"
    LAUNCH_PATCH_FUNCTION cd_elven_sleep_charm_resistance END
    BUT_ONLY_IF_IT_CHANGES


  // Make new msectype for Alacrity

  LAUNCH_ACTION_FUNCTION add_silent_sectype
    STR_VAR
    sectype	= "mhAlacrity"
    RET
    mhAlacrity	= sectype_value
  END

  LAUNCH_ACTION_FUNCTION edit_spell
    STR_VAR
    spell	= "%WIZARD_ALACRITY%"
    editstring	= "secondary=>%mhAlacrity%"
  END


  // Further patching of existing spells:
  // - Extend Magic Missile immunity to improved versions
  // - Make 6th level or higher spells dispel Alacrity
  //
  // NB: Keep this as is for speed, SFO has horrible performance.

  COPY_EXISTING_REGEXP "^.+\.\(cre\|itm\|spl\)$" "override"
    LAUNCH_PATCH_FUNCTION cd_apply_batch
      STR_VAR
      array_name	= "cd_immunity_magic_missile_arrays"
    END
    
    PATCH_IF "%SOURCE_EXT%" STRING_EQUAL_CASE "spl"
         AND LONG_AT (0x0034) > 5 // spell level
    BEGIN
      LAUNCH_PATCH_FUNCTION ADD_SPELL_CFEFFECT
        INT_VAR
	opcode		= 221	// Removal: Remove Secondary
	target		= 1	// Self
	timing		= 1	// Permanent
	parameter1	= 10
	parameter2	= mhAlacrity
      END
    END

    BUT_ONLY_IF_IT_CHANGES
END	// arcane_postproc


